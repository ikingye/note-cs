<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>首页 on 计算机学习笔记</title>
    <link>https://ikingye.github.io/note-cs/</link>
    <description>Recent content in 首页 on 计算机学习笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    
	<atom:link href="https://ikingye.github.io/note-cs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>makefile</title>
      <link>https://ikingye.github.io/note-cs/docs/compile/make/makefile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/compile/make/makefile/</guid>
      <description>makefile 简介 Makefile 用于定义如何创建目标文件，比如如何从源码到可执行文件。创建这一工具的目标是 减少不必要的编译或者任务。传说 Stuart Feldman 在 1976 年花了一个周末写出来的， 而今仍然使用广泛，特别是在 Unix 和 Linux 系统上。
基础 语法  注释：# 文件名： 必须是 Makefile  区分大小写   make &amp;lt;target&amp;gt; 生成 target  重命名：make -f &amp;quot;filename&amp;quot; &amp;lt;target&amp;gt;   只认识 TAB，不认识空格  但是在 GNU Make 3.82 之后, 可以通过设置参数 .RECIPEPREFIX 进行修改   shell 符号  @：不把命令打印到 stdout -：发生错误了也没关系    target 声明  创建一个 target： targets : prerequisites recipe  prerequisites(依赖) 是可选的, recipe(做法) 也可以多个或者不给 targets 和 prerequisites 都可以是多个, 以空格分割 file2.</description>
    </item>
    
    <item>
      <title>cmake</title>
      <link>https://ikingye.github.io/note-cs/docs/compile/make/cmake/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/compile/make/cmake/</guid>
      <description>cmake </description>
    </item>
    
    <item>
      <title>Salesforce</title>
      <link>https://ikingye.github.io/note-cs/docs/cloud-computing/saas/crm/salesforce/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/cloud-computing/saas/crm/salesforce/</guid>
      <description>Salesforce </description>
    </item>
    
    <item>
      <title>GAE</title>
      <link>https://ikingye.github.io/note-cs/docs/cloud-computing/paas/gae/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/cloud-computing/paas/gae/</guid>
      <description>Google App Engine </description>
    </item>
    
    <item>
      <title>Heroku</title>
      <link>https://ikingye.github.io/note-cs/docs/cloud-computing/paas/heroku/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/cloud-computing/paas/heroku/</guid>
      <description>Heroku </description>
    </item>
    
    <item>
      <title>OpenShift</title>
      <link>https://ikingye.github.io/note-cs/docs/cloud-computing/paas/openshift/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/cloud-computing/paas/openshift/</guid>
      <description>OpenShift Red Hat OpenShift is a leading hybrid cloud, enterprise Kubernetes application platform. OpenShift 在 Kubernetes 的基础上整合了应用的生命周期管理，包括 image 的编译，持续集成，部署以及更新。
Openshift 以前是 IaaS，现在 Openshift 自己宣称自己搭配 LXC 已经是 PaaS 了，VPS 不是云服务但可以类比为 IaaS。
Openshift 没有 root 权限 参考：openshift 和普通 vps 的区别在哪儿？</description>
    </item>
    
    <item>
      <title>Cloud Foundry</title>
      <link>https://ikingye.github.io/note-cs/docs/cloud-computing/paas/cloud-foundry/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/cloud-computing/paas/cloud-foundry/</guid>
      <description>Cloud Foundry </description>
    </item>
    
    <item>
      <title>AppFog</title>
      <link>https://ikingye.github.io/note-cs/docs/cloud-computing/paas/appfog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/cloud-computing/paas/appfog/</guid>
      <description>AppFog </description>
    </item>
    
  </channel>
</rss>