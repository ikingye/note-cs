<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>首页 on 计算机学习笔记</title>
    <link>https://ikingye.github.io/note-cs/</link>
    <description>Recent content in 首页 on 计算机学习笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    
	<atom:link href="https://ikingye.github.io/note-cs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>alpine</title>
      <link>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/image/alpine/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/image/alpine/</guid>
      <description>alpine 安装 telnet apk add busybox-extras</description>
    </item>
    
    <item>
      <title>GitHub</title>
      <link>https://ikingye.github.io/note-cs/docs/others/tool/dev/github/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/others/tool/dev/github/</guid>
      <description>GitHub 学习 Github Github Learning Lab Introduction to GitHub  Github 工具 cli/cli  GitHub’s official command line tool https://cli.github.com
github/hub  A command-line tool that makes git easier to use with GitHub. https://hub.github.com/
 开源库 素材 / 规范 徽章 shields.io 如：
参考：
  用 [Substats] 和 Shields.io 为你的个人主页定制动态数据小牌子
spencerwooo/Substats    Github star 历史 timqian/star-history  https://star-history.t9t.io/
vesoft-inc/github-statistics  A react static app for displaying github repo statistiscs like Star History, Fork History and more.</description>
    </item>
    
    <item>
      <title>Vim 实用技巧（第 2 版）</title>
      <link>https://ikingye.github.io/note-cs/docs/book/others/practical-vim/zh/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/book/others/practical-vim/zh/</guid>
      <description>Vim 实用技巧（第 2 版） 
译者 杨源 / 车文隆</description>
    </item>
    
    <item>
      <title>关键字</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/java/basic/grammar/keyword/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/java/basic/grammar/keyword/</guid>
      <description>Java 关键字 </description>
    </item>
    
    <item>
      <title>快速上手</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/db/postgresql/basic/quick-start/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/db/postgresql/basic/quick-start/</guid>
      <description>PostgreSQL 快速上手 安装 MacOS  安装：brew install postgresql 启动：brew services start postgresql 创建用户名数据库：createdb  基础命令 登录 PostgreSQL 控制台：psql psql -U [user] -d [database] -h [host] -p [port]
默认 psql
user：当前mac用户 database：用户同名数据库 主机：localhost 端口号：5432，postgresql的默认端口是5432 \l 使用 \l 命令列出所有的数据库，看到已存在用户同名数据库、postgres 数据库。 但是 postgres 数据库的所有者是当前用户，没有 postgres 用户。
 创建 postgres 用户：CREATE USER postgres WITH PASSWORD &#39;password&#39;; 删除默认生成的 postgres 数据库：DROP DATABASE postgres; 创建属于 postgres 用户的 postgres 数据库：CREATE DATABASE postgres OWNER postgres; 将数据库所有权限赋予 postgres 用户：GRANT ALL PRIVILEGES ON DATABASE postgres to postgres; 给 postgres 用户添加创建数据库的属性：ALTER ROLE postgres CREATEDB;  常用控制台命令 \password：设置当前登录用户的密码 \h：查看SQL命令的解释，比如\h select。 \?</description>
    </item>
    
    <item>
      <title>教程</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/db/postgresql/appendix/tutorial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/db/postgresql/appendix/tutorial/</guid>
      <description>教程 基础 进阶 高阶 </description>
    </item>
    
    <item>
      <title>教程</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/os/android/appendix/tutorial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/os/android/appendix/tutorial/</guid>
      <description>教程 基础 进阶 高阶 </description>
    </item>
    
    <item>
      <title>教程</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/os/ios/appendix/tutorial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/os/ios/appendix/tutorial/</guid>
      <description>教程 基础 进阶 高阶 </description>
    </item>
    
    <item>
      <title>教程</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/os/macos/appendix/tutorial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/os/macos/appendix/tutorial/</guid>
      <description>教程 基础 进阶 高阶 </description>
    </item>
    
    <item>
      <title>教程</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/os/unix/appendix/tutorial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/os/unix/appendix/tutorial/</guid>
      <description>教程 基础 进阶 高阶 </description>
    </item>
    
    <item>
      <title>教程</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/os/windows/appendix/tutorial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/os/windows/appendix/tutorial/</guid>
      <description>教程 基础 进阶 高阶 </description>
    </item>
    
    <item>
      <title>教程</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/cpp/appendix/tutorial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/cpp/appendix/tutorial/</guid>
      <description>教程 基础  learn c++ in y minutes  进阶 高阶 综合  C++ 后台开发有哪些练基础的开源项目？  yedf/handy     </description>
    </item>
    
    <item>
      <title>教程</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/csharp/appendix/tutorial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/csharp/appendix/tutorial/</guid>
      <description>教程 基础 进阶 高阶 </description>
    </item>
    
    <item>
      <title>教程</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/java/appendix/tutorial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/java/appendix/tutorial/</guid>
      <description>Java 教程 基础  进阶 doocs/advanced-java  互联网 Java 工程师进阶知识完全扫盲：涵盖高并发、分布式、高可用、微服务、海量数据处理等领域知识，后端同学必看，前端同学也可学习 https://doocs.github.io/advanced-java
Snailclimb/JavaGuide  【Java 学习 + 面试指南】 一份涵盖大部分 Java 程序员所需要掌握的核心知识。
Effective Java  第 3 版中文版：sjsdfg.github.io/effective-java-3rd-chinese   Java 编程思想  第 5 版中文版：lingcoder.github.io/OnJava8   redspider1/concurrent  Java 多线程系列文章 在线阅读
高阶 源码阅读 seaswalker/spring-analysis  Spring 源码阅读
seaswalker/JDK  JDK 源码阅读笔记
 综合 博客  farmerjohngit/myblog    sorenduan/awesome-java-books  Java 技术书籍大全</description>
    </item>
    
    <item>
      <title>教程</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/javascript/appendix/turorial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/javascript/appendix/turorial/</guid>
      <description>教程 基础 ruanyf/jstraining  全栈工程师培训材料，帮助学习者掌握 JavaScript 全栈开发的基本知识，承担简单 Web 应用的前后端开发。
一共四讲，适合两天的训练营。
 进阶  高阶 </description>
    </item>
    
    <item>
      <title>教程</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/kotlin/appendix/tutorial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/kotlin/appendix/tutorial/</guid>
      <description>教程 基础 进阶 高阶 </description>
    </item>
    
    <item>
      <title>教程</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/lua/appendix/tutorial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/lua/appendix/tutorial/</guid>
      <description>教程 基础 进阶 高阶 </description>
    </item>
    
    <item>
      <title>教程</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/objective-c/appendix/tutorial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/objective-c/appendix/tutorial/</guid>
      <description>教程 基础 进阶 高阶 </description>
    </item>
    
    <item>
      <title>教程</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/ruby/appendix/tutorial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/ruby/appendix/tutorial/</guid>
      <description>教程 基础 进阶 高阶 </description>
    </item>
    
    <item>
      <title>教程</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/rust/appendix/tutorial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/rust/appendix/tutorial/</guid>
      <description>教程 经典 The Rust Programming Language The most comprehensive resource for learning Rust, but a bit theoretical sometimes. You will be using this along with Rustlings!
Rust by Example Learn Rust by solving little exercises! It&amp;rsquo;s almost like rustlings, but online.
rust-lang/rustlings  Small exercises to get you used to reading and writing Rust code!
 基础 进阶 高阶 </description>
    </item>
    
    <item>
      <title>教程</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/scala/appendix/tutorial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/scala/appendix/tutorial/</guid>
      <description>教程 基础 进阶 高阶 </description>
    </item>
    
    <item>
      <title>教程</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/swift/appendix/tutorial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/swift/appendix/tutorial/</guid>
      <description>教程 基础 进阶 高阶 </description>
    </item>
    
    <item>
      <title>百度</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/cpp/basic/practice/spec/baidu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/cpp/basic/practice/spec/baidu/</guid>
      <description>百度 C++ 编程规范 </description>
    </item>
    
    <item>
      <title>百度</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/java/basic/practice/spec/baidu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/java/basic/practice/spec/baidu/</guid>
      <description>百度 Java 编码规范 V1.3 </description>
    </item>
    
    <item>
      <title>百度</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/javascript/basic/practice/spec/baidu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/javascript/basic/practice/spec/baidu/</guid>
      <description>百度 JavaScript 编码规范 1 前言
2 代码风格
2.1 文件
2.2 结构
2.2.1 缩进
2.2.2 空格
2.2.3 换行
2.2.4 语句
2.3 命名
2.4 注释
2.4.1 单行注释
2.4.2 多行注释
2.4.3 文档化注释
2.4.4 类型定义
2.4.5 文件注释
2.4.6 命名空间注释
2.4.7 类注释
2.4.8 函数/方法注释
2.4.9 事件注释
2.4.10 常量注释
2.4.11 复杂类型注释
2.4.12 AMD 模块注释
2.4.13 细节注释
3 语言特性
3.1 变量
3.2 条件
3.3 循环
3.4 类型
3.4.1 类型检测
3.4.2 类型转换
3.5 字符串
3.6 对象
3.7 数组</description>
    </item>
    
    <item>
      <title>百度</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/objective-c/basic/practice/spec/baidu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/objective-c/basic/practice/spec/baidu/</guid>
      <description>百度 Objective-C 编码规范 (2019 版) </description>
    </item>
    
    <item>
      <title>百度</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/php/basic/practice/spec/baidu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/php/basic/practice/spec/baidu/</guid>
      <description>百度 PHP 编码规范 (201904 版) </description>
    </item>
    
    <item>
      <title>makefile</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/compile/make/makefile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/compile/make/makefile/</guid>
      <description>makefile 简介 Makefile 用于定义如何创建目标文件，比如如何从源码到可执行文件。创建这一工具的目标是 减少不必要的编译或者任务。传说 Stuart Feldman 在 1976 年花了一个周末写出来的， 而今仍然使用广泛，特别是在 Unix 和 Linux 系统上。
基础 语法  注释：# 文件名： 必须是 Makefile  区分大小写   make &amp;lt;target&amp;gt; 生成 target  重命名：make -f &amp;quot;filename&amp;quot; &amp;lt;target&amp;gt;   只认识 TAB，不认识空格  但是在 GNU Make 3.82 之后, 可以通过设置参数 .RECIPEPREFIX 进行修改   shell 符号  @：不把命令打印到 stdout -：发生错误了也没关系    target 声明  创建一个 target： targets : prerequisites recipe  prerequisites(依赖) 是可选的, recipe(做法) 也可以多个或者不给 targets 和 prerequisites 都可以是多个, 以空格分割 file2.</description>
    </item>
    
    <item>
      <title>基础</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/db/mysql/appendix/interview/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/db/mysql/appendix/interview/basic/</guid>
      <description>基础面试题 </description>
    </item>
    
    <item>
      <title>基础</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/db/postgresql/appendix/interview/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/db/postgresql/appendix/interview/basic/</guid>
      <description>基础面试题 </description>
    </item>
    
    <item>
      <title>基础</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/db/redis/appendix/interview/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/db/redis/appendix/interview/basic/</guid>
      <description>基础面试题 Redis 有哪些数据类型，分别适合什么场景？ Redis 如何做持久化？ Redis 如何实现高可用？ Redis 如何与 Mysql 做一致性同步？ </description>
    </item>
    
    <item>
      <title>基础</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/os/android/appendix/interview/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/os/android/appendix/interview/basic/</guid>
      <description>基础面试题 </description>
    </item>
    
    <item>
      <title>基础</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/os/ios/appendix/interview/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/os/ios/appendix/interview/basic/</guid>
      <description>基础面试题 </description>
    </item>
    
    <item>
      <title>基础</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/os/macos/appendix/interview/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/os/macos/appendix/interview/basic/</guid>
      <description>基础面试题 </description>
    </item>
    
    <item>
      <title>基础</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/os/unix/appendix/interview/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/os/unix/appendix/interview/basic/</guid>
      <description>基础面试题 </description>
    </item>
    
    <item>
      <title>基础</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/os/windows/appendix/interview/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/os/windows/appendix/interview/basic/</guid>
      <description>基础面试题 </description>
    </item>
    
    <item>
      <title>基础</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/c/appendix/interview/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/c/appendix/interview/basic/</guid>
      <description>基础面试题 </description>
    </item>
    
    <item>
      <title>基础</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/cpp/appendix/interview/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/cpp/appendix/interview/basic/</guid>
      <description>基础面试题 </description>
    </item>
    
    <item>
      <title>基础</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/csharp/appendix/interview/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/csharp/appendix/interview/basic/</guid>
      <description>基础面试题 </description>
    </item>
    
    <item>
      <title>基础</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/javascript/appendix/interview/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/javascript/appendix/interview/basic/</guid>
      <description>基础面试题 </description>
    </item>
    
    <item>
      <title>基础</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/kotlin/appendix/interview/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/kotlin/appendix/interview/basic/</guid>
      <description>基础面试题 </description>
    </item>
    
    <item>
      <title>基础</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/lua/appendix/interview/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/lua/appendix/interview/basic/</guid>
      <description>基础面试题 </description>
    </item>
    
    <item>
      <title>基础</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/objective-c/appendix/interview/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/objective-c/appendix/interview/basic/</guid>
      <description>基础面试题 </description>
    </item>
    
    <item>
      <title>基础</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/php/appendix/interview/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/php/appendix/interview/basic/</guid>
      <description>基础面试题 </description>
    </item>
    
    <item>
      <title>基础</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/ruby/appendix/interview/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/ruby/appendix/interview/basic/</guid>
      <description>基础面试题 </description>
    </item>
    
    <item>
      <title>基础</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/rust/appendix/interview/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/rust/appendix/interview/basic/</guid>
      <description>基础面试题 </description>
    </item>
    
    <item>
      <title>基础</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/scala/appendix/interview/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/scala/appendix/interview/basic/</guid>
      <description>基础面试题 </description>
    </item>
    
    <item>
      <title>基础</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/swift/appendix/interview/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/swift/appendix/interview/basic/</guid>
      <description>基础面试题 </description>
    </item>
    
    <item>
      <title>基础</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/be/frame/nodejs/appendix/interview/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/be/frame/nodejs/appendix/interview/basic/</guid>
      <description>基础面试题 </description>
    </item>
    
    <item>
      <title>基础</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/client/android/appendix/interview/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/client/android/appendix/interview/basic/</guid>
      <description>基础面试题 </description>
    </item>
    
    <item>
      <title>基础</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/client/ios/appendix/interview/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/client/ios/appendix/interview/basic/</guid>
      <description>基础面试题 </description>
    </item>
    
    <item>
      <title>基础</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/client/xiaochengxu/appendix/interview/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/client/xiaochengxu/appendix/interview/basic/</guid>
      <description>基础面试题 </description>
    </item>
    
    <item>
      <title>基础</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/embedded/appendix/interview/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/embedded/appendix/interview/basic/</guid>
      <description>基础面试题 </description>
    </item>
    
    <item>
      <title>基础</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/fe/frame/angular/appendix/interview/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/fe/frame/angular/appendix/interview/basic/</guid>
      <description>基础面试题 </description>
    </item>
    
    <item>
      <title>基础</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/fe/frame/react/appendix/interview/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/fe/frame/react/appendix/interview/basic/</guid>
      <description>基础面试题 </description>
    </item>
    
    <item>
      <title>基础</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/fe/frame/vue/appendix/interview/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/fe/frame/vue/appendix/interview/basic/</guid>
      <description>基础面试题 </description>
    </item>
    
    <item>
      <title>基础</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/security/appendix/interview/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/security/appendix/interview/basic/</guid>
      <description>基础面试题 </description>
    </item>
    
    <item>
      <title>基础</title>
      <link>https://ikingye.github.io/note-cs/docs/domain/cc/knative/appendix/interview/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/domain/cc/knative/appendix/interview/basic/</guid>
      <description>基础面试题 </description>
    </item>
    
    <item>
      <title>常用 package</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/java/basic/practice/package/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/java/basic/practice/package/</guid>
      <description>Java 常用 package </description>
    </item>
    
    <item>
      <title>数据结构</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/java/basic/grammar/datastruct/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/java/basic/grammar/datastruct/</guid>
      <description>Java 语言数据结构 </description>
    </item>
    
    <item>
      <title>进阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/db/mysql/appendix/interview/advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/db/mysql/appendix/interview/advanced/</guid>
      <description>进阶面试题 </description>
    </item>
    
    <item>
      <title>进阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/db/postgresql/appendix/interview/advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/db/postgresql/appendix/interview/advanced/</guid>
      <description>进阶面试题 </description>
    </item>
    
    <item>
      <title>进阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/db/redis/appendix/interview/advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/db/redis/appendix/interview/advanced/</guid>
      <description>进阶面试题 </description>
    </item>
    
    <item>
      <title>进阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/os/android/appendix/interview/advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/os/android/appendix/interview/advanced/</guid>
      <description>进阶面试题 </description>
    </item>
    
    <item>
      <title>进阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/os/ios/appendix/interview/advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/os/ios/appendix/interview/advanced/</guid>
      <description>进阶面试题 </description>
    </item>
    
    <item>
      <title>进阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/os/macos/appendix/interview/advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/os/macos/appendix/interview/advanced/</guid>
      <description>进阶面试题 </description>
    </item>
    
    <item>
      <title>进阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/os/unix/appendix/interview/advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/os/unix/appendix/interview/advanced/</guid>
      <description>进阶面试题 </description>
    </item>
    
    <item>
      <title>进阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/os/windows/appendix/interview/advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/os/windows/appendix/interview/advanced/</guid>
      <description>进阶面试题 </description>
    </item>
    
    <item>
      <title>进阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/c/appendix/interview/advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/c/appendix/interview/advanced/</guid>
      <description>进阶面试题 </description>
    </item>
    
    <item>
      <title>进阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/cpp/appendix/interview/advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/cpp/appendix/interview/advanced/</guid>
      <description>进阶面试题 为什么 C++ 的 member function template 不能是 virtual 的 比如，下面的代码是不合法的：
class Animal{ public: template&amp;lt;typename T&amp;gt; virtual void make_sound(){ //...  } }; 因为 C++ 的编译与链接模型是 &amp;ldquo;分离&amp;rdquo; 的 (至少是部分原因吧)。
从 Unix/C 开始，一个 C/C++ 程序就可以被分开编译，然后用一个 linker 链接起来。这种模型有一个问题，就是各个编译单元可能对另一个编译单元一无所知。 一个 function template 最后到底会被 instantiate 为多少个函数，要等整个程序 (所有的编译单元) 全部被编译完成才知道。 同时，virtual function 的实现大多利用了一个 &amp;ldquo;虚函数表&amp;rdquo; 的东西，这种实现中，一个类的内存布局 (或者说虚函数表的内存布局) 需要在这个类编译完成的时候就被完全确定。 所以，由上面的矛盾可知，C++ 的 member function 不能既是 template 又是 virtual 的。
参考：https://www.zhihu.com/question/60911582/answer/182045051</description>
    </item>
    
    <item>
      <title>进阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/csharp/appendix/interview/advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/csharp/appendix/interview/advanced/</guid>
      <description>进阶面试题 </description>
    </item>
    
    <item>
      <title>进阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/javascript/appendix/interview/advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/javascript/appendix/interview/advanced/</guid>
      <description>进阶面试题 </description>
    </item>
    
    <item>
      <title>进阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/kotlin/appendix/interview/advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/kotlin/appendix/interview/advanced/</guid>
      <description>进阶面试题 </description>
    </item>
    
    <item>
      <title>进阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/lua/appendix/interview/advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/lua/appendix/interview/advanced/</guid>
      <description>进阶面试题 </description>
    </item>
    
    <item>
      <title>进阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/objective-c/appendix/interview/advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/objective-c/appendix/interview/advanced/</guid>
      <description>进阶面试题 </description>
    </item>
    
    <item>
      <title>进阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/php/appendix/interview/advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/php/appendix/interview/advanced/</guid>
      <description>进阶面试题 </description>
    </item>
    
    <item>
      <title>进阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/ruby/appendix/interview/advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/ruby/appendix/interview/advanced/</guid>
      <description>进阶面试题 </description>
    </item>
    
    <item>
      <title>进阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/rust/appendix/interview/advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/rust/appendix/interview/advanced/</guid>
      <description>进阶面试题 </description>
    </item>
    
    <item>
      <title>进阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/scala/appendix/interview/advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/scala/appendix/interview/advanced/</guid>
      <description>进阶面试题 </description>
    </item>
    
    <item>
      <title>进阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/swift/appendix/interview/advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/swift/appendix/interview/advanced/</guid>
      <description>进阶面试题 </description>
    </item>
    
    <item>
      <title>进阶</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/be/frame/nodejs/appendix/interview/advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/be/frame/nodejs/appendix/interview/advanced/</guid>
      <description>进阶面试题 </description>
    </item>
    
    <item>
      <title>进阶</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/client/android/appendix/interview/advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/client/android/appendix/interview/advanced/</guid>
      <description>进阶面试题 </description>
    </item>
    
    <item>
      <title>进阶</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/client/ios/appendix/interview/advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/client/ios/appendix/interview/advanced/</guid>
      <description>进阶面试题 </description>
    </item>
    
    <item>
      <title>进阶</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/client/xiaochengxu/appendix/interview/advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/client/xiaochengxu/appendix/interview/advanced/</guid>
      <description>进阶面试题 </description>
    </item>
    
    <item>
      <title>进阶</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/embedded/appendix/interview/advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/embedded/appendix/interview/advanced/</guid>
      <description>进阶面试题 </description>
    </item>
    
    <item>
      <title>进阶</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/fe/frame/angular/appendix/interview/advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/fe/frame/angular/appendix/interview/advanced/</guid>
      <description>进阶面试题 </description>
    </item>
    
    <item>
      <title>进阶</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/fe/frame/react/appendix/interview/advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/fe/frame/react/appendix/interview/advanced/</guid>
      <description>进阶面试题 </description>
    </item>
    
    <item>
      <title>进阶</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/fe/frame/vue/appendix/interview/advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/fe/frame/vue/appendix/interview/advanced/</guid>
      <description>进阶面试题 </description>
    </item>
    
    <item>
      <title>进阶</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/security/appendix/interview/advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/security/appendix/interview/advanced/</guid>
      <description>进阶面试题 </description>
    </item>
    
    <item>
      <title>进阶</title>
      <link>https://ikingye.github.io/note-cs/docs/domain/cc/knative/appendix/interview/advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/domain/cc/knative/appendix/interview/advanced/</guid>
      <description>进阶面试题 </description>
    </item>
    
    <item>
      <title>cmake</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/compile/make/cmake/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/compile/make/cmake/</guid>
      <description>cmake </description>
    </item>
    
    <item>
      <title>高阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/db/mysql/appendix/interview/expert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/db/mysql/appendix/interview/expert/</guid>
      <description>高阶面试题 </description>
    </item>
    
    <item>
      <title>高阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/db/postgresql/appendix/interview/expert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/db/postgresql/appendix/interview/expert/</guid>
      <description>高阶面试题 </description>
    </item>
    
    <item>
      <title>高阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/db/redis/appendix/interview/expert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/db/redis/appendix/interview/expert/</guid>
      <description>高阶面试题 </description>
    </item>
    
    <item>
      <title>高阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/os/android/appendix/interview/expert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/os/android/appendix/interview/expert/</guid>
      <description>高阶面试题 </description>
    </item>
    
    <item>
      <title>高阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/os/ios/appendix/interview/expert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/os/ios/appendix/interview/expert/</guid>
      <description>高阶面试题 </description>
    </item>
    
    <item>
      <title>高阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/os/macos/appendix/interview/expert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/os/macos/appendix/interview/expert/</guid>
      <description>高阶面试题 </description>
    </item>
    
    <item>
      <title>高阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/os/unix/appendix/interview/expert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/os/unix/appendix/interview/expert/</guid>
      <description>高阶面试题 </description>
    </item>
    
    <item>
      <title>高阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/os/windows/appendix/interview/expert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/os/windows/appendix/interview/expert/</guid>
      <description>高阶面试题 </description>
    </item>
    
    <item>
      <title>高阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/c/appendix/interview/expert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/c/appendix/interview/expert/</guid>
      <description>高阶面试题 </description>
    </item>
    
    <item>
      <title>高阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/cpp/appendix/interview/expert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/cpp/appendix/interview/expert/</guid>
      <description>高阶面试题 </description>
    </item>
    
    <item>
      <title>高阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/csharp/appendix/interview/expert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/csharp/appendix/interview/expert/</guid>
      <description>高阶面试题 </description>
    </item>
    
    <item>
      <title>高阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/javascript/appendix/interview/expert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/javascript/appendix/interview/expert/</guid>
      <description>高阶面试题 </description>
    </item>
    
    <item>
      <title>高阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/kotlin/appendix/interview/expert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/kotlin/appendix/interview/expert/</guid>
      <description>高阶面试题 </description>
    </item>
    
    <item>
      <title>高阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/lua/appendix/interview/expert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/lua/appendix/interview/expert/</guid>
      <description>高阶面试题 </description>
    </item>
    
    <item>
      <title>高阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/objective-c/appendix/interview/expert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/objective-c/appendix/interview/expert/</guid>
      <description>高阶面试题 </description>
    </item>
    
    <item>
      <title>高阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/php/appendix/interview/expert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/php/appendix/interview/expert/</guid>
      <description>高阶面试题 </description>
    </item>
    
    <item>
      <title>高阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/ruby/appendix/interview/expert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/ruby/appendix/interview/expert/</guid>
      <description>高阶面试题 </description>
    </item>
    
    <item>
      <title>高阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/rust/appendix/interview/expert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/rust/appendix/interview/expert/</guid>
      <description>高阶面试题 </description>
    </item>
    
    <item>
      <title>高阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/scala/appendix/interview/expert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/scala/appendix/interview/expert/</guid>
      <description>高阶面试题 </description>
    </item>
    
    <item>
      <title>高阶</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/swift/appendix/interview/expert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/swift/appendix/interview/expert/</guid>
      <description>高阶面试题 </description>
    </item>
    
    <item>
      <title>高阶</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/be/frame/nodejs/appendix/interview/expert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/be/frame/nodejs/appendix/interview/expert/</guid>
      <description>高阶面试题 </description>
    </item>
    
    <item>
      <title>高阶</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/client/android/appendix/interview/expert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/client/android/appendix/interview/expert/</guid>
      <description>高阶面试题 </description>
    </item>
    
    <item>
      <title>高阶</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/client/ios/appendix/interview/expert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/client/ios/appendix/interview/expert/</guid>
      <description>高阶面试题 </description>
    </item>
    
    <item>
      <title>高阶</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/client/xiaochengxu/appendix/interview/expert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/client/xiaochengxu/appendix/interview/expert/</guid>
      <description>高阶面试题 </description>
    </item>
    
    <item>
      <title>高阶</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/embedded/appendix/interview/expert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/embedded/appendix/interview/expert/</guid>
      <description>高阶面试题 </description>
    </item>
    
    <item>
      <title>高阶</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/fe/frame/angular/appendix/interview/expert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/fe/frame/angular/appendix/interview/expert/</guid>
      <description>高阶面试题 </description>
    </item>
    
    <item>
      <title>高阶</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/fe/frame/react/appendix/interview/expert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/fe/frame/react/appendix/interview/expert/</guid>
      <description>高阶面试题 </description>
    </item>
    
    <item>
      <title>高阶</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/fe/frame/vue/appendix/interview/expert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/fe/frame/vue/appendix/interview/expert/</guid>
      <description>高阶面试题 </description>
    </item>
    
    <item>
      <title>高阶</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/security/appendix/interview/expert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/security/appendix/interview/expert/</guid>
      <description>高阶面试题 </description>
    </item>
    
    <item>
      <title>高阶</title>
      <link>https://ikingye.github.io/note-cs/docs/domain/cc/knative/appendix/interview/expert/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/domain/cc/knative/appendix/interview/expert/</guid>
      <description>高阶面试题 </description>
    </item>
    
    <item>
      <title>gulp</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/be/frame/nodejs/basic/build/gulp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/be/frame/nodejs/basic/build/gulp/</guid>
      <description>gulp 类似与 make 参考：https://learnxinyminutes.com/docs/zh-cn/make-cn/</description>
    </item>
    
    <item>
      <title>关键字</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/cpp/basic/grammar/keyword/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/cpp/basic/grammar/keyword/</guid>
      <description>C++ 关键字 这是 C++ 中的保留字列表。因为它们为语言所用，故这些关键词不可用于重定义或重载。
注意 and、bitor、or、xor、compl、bitand、and_eq、or_eq、xor_eq、not 及 not_eq（还有双标符 &amp;lt;%、%&amp;gt;、&amp;lt;:、:&amp;gt;、%: 及 %:%:）提供标准记号的代用表示方法。
参考：C++ 参考手册</description>
    </item>
    
    <item>
      <title>快捷键</title>
      <link>https://ikingye.github.io/note-cs/docs/others/tool/dev/vscode/shortcuts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/others/tool/dev/vscode/shortcuts/</guid>
      <description>VScode 快捷键 MacOS 选择  选中所有同一个词：cmd + shift + L  编辑  格式化：opt + shift + f Windows 选择  选中所有同一个词：ctrl + shift + L  </description>
    </item>
    
    <item>
      <title>百度</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/scala/basic/spec/baidu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/scala/basic/spec/baidu/</guid>
      <description>百度 Scala 编码规范 前言 就目前 Baidu 内部情况 (2018.10)，Scala 这门语言主要用于计算团队内部的和 Spark 相关项目研发、社区贡献工作以及公司的 Spark 用户使用 Scala API 编写 Spark 作业三个用途，所以本文主体沿用如下两部分并稍作修改：
 Apache Spark 开源社区 Scala 编程指南:
Apache Spark 有超过 1000 位贡献者，就我们所知，应该是目前大数据领域里最大的开源项目且是最活跃的 Scala 项目，结合 Baidu 内部现状，本文主体沿用此部分中和 Spark 社区相关内容，去除部分项目专用细节。 scala 官方 style guide 里的格式部分已包含在 Spark 项目文档中，这里摘录部分官方 style guide 作为 Apache Spark 社区的编程指南补充。  </description>
    </item>
    
    <item>
      <title>编程学习网站</title>
      <link>https://ikingye.github.io/note-cs/docs/others/tool/study/tutorial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/others/tool/study/tutorial/</guid>
      <description>编程学习网站 基础 Codecademy Programiz  算法 Codewars  进阶 Codeplace 通过实际应用来学习编程。</description>
    </item>
    
    <item>
      <title>GoLand</title>
      <link>https://ikingye.github.io/note-cs/docs/others/tool/dev/jetbrains/goland/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/others/tool/dev/jetbrains/goland/</guid>
      <description>GoLand </description>
    </item>
    
    <item>
      <title>Idea</title>
      <link>https://ikingye.github.io/note-cs/docs/others/tool/dev/jetbrains/idea/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/others/tool/dev/jetbrains/idea/</guid>
      <description>IntelliJ Idea 插件 Alibaba Java Coding Guidelines </description>
    </item>
    
    <item>
      <title>5G 边缘计算</title>
      <link>https://ikingye.github.io/note-cs/docs/domain/cc/edge/5g-edge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/domain/cc/edge/5g-edge/</guid>
      <description>5G 边缘计算 5G 的 G 是英文 Generation 的缩写，也就是 “世代” 的意思
简单说，5G 就是第五代移动通信系统
5G 与边缘计算有什么关系？ 5G 通信网络更加去中心化，需要在网络边缘部署小规模或者便携式数据中心，进行终端请求的本地化处理，以满足 URLLC 和 mMTC 的超低延时需求，因此边缘计算是 5G 核心技术之一。
5G 的三大典型应用场景对网络性能的要求有显著差异，但为控制成本，运营商必然选择一张承载网 + 网络切片 / 边缘计算技术，实现在最少的资本投入下最丰富的网络功能。
在 5G 时代，承载网的带宽瓶颈、时延抖动等性能瓶颈难以突破，引入边缘计算后将大量业务在网络边缘终结。
5G 与边缘计算的关系 5G 为边缘计算产业的落地和发展提供了良好的网络基础， 主要体现在三大场景（eMBB，uRLLC 和 mMTC）的支持、核心网用户面功能的灵活部署以及 5G 网络能力开放等方面。
“5G + MEC + AI”是 5G 在网络边缘更好使能各行各业的关键； 是运营商助力垂直行业数字化和智能化的新模式； 是运营商进入垂直行业的触点和重点场景； 也是 5G 应用是否成功的一个重要标志。
5G 支持将网络能力开放给边缘应用。 无线网络信息服务、位置服务、QoS服务等网络能力，可以封装成边缘计算 PaaS 平台的 API，开放给应用。 5G 与边缘计算结合，是运营商使能边缘计算的新核心竞争力和最大独特优势。 同时，边缘计算也成为 5G 服务垂直行业，充分发挥 5G 新网络特性的重要利器之一。
5G MEC 将云计算和 5G 核心网带到网络边缘，带来了新的流量模型和部署模型。 如果运营商还继续采用 4G 移动承载网的设计思路，在 5G 时代，运营商网络将面临边缘计算的困局。</description>
    </item>
    
    <item>
      <title>BFE</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/be/proxy/bfe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/be/proxy/bfe/</guid>
      <description>BFE baidu/bfe Baidu Front End 百度统一前端
统一的百度七层（HTTP）流量接入平台
BFE 之前的百度前端接入架构 流量从 BGW 接入之后直接到达了产品线的前端服务器， 这些服务器种类繁多，几乎包涵了现在流行的各种 webserver，比如 nginx,apache,lighttpd 等， 不同的服务器经过后端不同业务逻辑的处理之后打印日志内容并且将响应发送给用户。
开发成本高 如果前端多个产品线需要实现一个通用功能，比如防攻击或者 IP 地域识别，需要开发不同的 webserver 模块，虽然每个模块的功能一样，但实现方式完全不同，所以存在一定的重复开发和人力资源浪费。
维护成本高 不同的产品线和模块都需要一定的人力来维护。前端接入服务器类型多样，实现和原理各异，出现问题的概率大，Nginx, apache 等服务器比较稳定，高效，但是如果产品线出现强烈的个性化业务需求或者严重 BUG，开源社区很难提供及时有效的技术支持。
数据和策略共享的成本高 产品线间维护不同的前端接入模块，策略和经验很难做到有效的分享。
技术积累难 由于产品线间沟通和分享的成本大，很多经验和成果并没有得到有效的积累。
 BFE 架构 BFE 是一个七层接入系统。 它的最基本工作就是接收用户数据，解析 HTTP 请求，对内容进行过滤和分析之后再转发给后端产品线。
BFE 最基本的工作就是从 BGW/BVS 接入流量并将流量转发给产品线的前端 webserver 或者其他接入模块，最后接收后端 server 的内容并回复给外部用户。
反向代理服务器 BFE 本质上是一个反向代理服务器，每天承接百度数百亿的流量，高峰期的集群 QPS 有一百多万。 在如此大的流量压力环境中，服务器的处理性能至关重要。 BFE 采用现在业界流行的多进程全异步非阻塞事件驱动模型， 但由于业务功能繁多，产品线策略及规则复杂，任何一个开源的代理服务器比如 nginx, squid, varnish 的性能都很难满足需求。 BFE 本身也需要不断优化，降低系统资源开销，提升处理性能。
能够在任意阶段处理用户请求 从接收用户请求的时候起，BFE 就能对数据进行完全的解析和过滤，能够在读取、解析、连接、写后端等的任一阶段对数据进行修改、增加、删除、丢弃等操作。
分流策略非常高效 NGINX 和大部分通用的网络服务器在多个正则规则和复杂策略组合下的分流效率比较低，BFE 通过反解正则规则及嵌套分流策略实现了时间复杂度为 O(1) 的分流。</description>
    </item>
    
    <item>
      <title>BGW</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/be/proxy/bgw/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/be/proxy/bgw/</guid>
      <description>BGW Baidu Gate Way 百度智能网关 是一种用软件实现的负载均衡设备。
BGW 将多台 server（即 RealServer）虚拟化成了一台 server，提供统一的 VIP（即 virtual ip），用户只需和 VIP 进行通讯，就能访问 RealServer 上的服务。
最终， 从 client 的角度看到，自己和一台 server 机器（确切说是一个 ip）在通讯，感觉不到 RealServer 的存在； 从 RealServer 的角度看到，自己和 client 在通讯，没有感觉到 BGW 的存在。
TTM 模块 BGW 会对报文做 SNAT 和 DNAT，这样 RS（RealServer）看到的源 IP 将是 BGW 的后端 IP，而不是客户端的真实 IP， 而现实中有许多业务需要知道客户端的真实 IP。
为了解决这个问题，RS 需要在内核加载一个 TTM 模块，即可将该选项携带的真实 IP 信息获取出来， 该过程对于用户态应用程序来说是完全透明的，用户态应用程序所看到的是从客户端真实 IP，实现 BGW 的透明。</description>
    </item>
    
    <item>
      <title>CAP</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/arch/principle/cap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/arch/principle/cap/</guid>
      <description>CAP P 是前提 在理论计算机科学中，CAP 定理（CAP theorem），又被称作布鲁尔定理（Brewer&amp;rsquo;s theorem），它指出对于一个 distributed data store 来说，不可能同时满足以下三点：
 一致性（Consistency）  每次读取要么获得最近写入的数据，要么获得一个错误。   可用性（Availability）  每次请求都能获得一个非错误响应，但不保证返回的是最新写入的数据。   分区容错性（Partition tolerance）  以实际效果而言，分区相当于对通信的时限要求。系统如果不能在时限内达成数据一致性，就意味着发生了分区的情况，必须就当前操作在 C 和 A 之间做出选择。 尽管任意数量的消息被节点间的网络丢失（或延迟），系统仍继续运行。    一般选 AP 也就是说，在存在网络分区的情况下，一致性和可用性必须二选一。
比如：A 服务器 B 服务器同步数据，现在 A B 之间网络断掉了，那么现在发来 A 一个写入请求，但是 B 却没有相关的请求，显然，
 如果 A 不写，保持一致性，那么我们就失去了 A 的服务， 但是如果 A 写了，跟 B 的数据就不一致了，我们自然就丧失了一致性。  这里的一致性（Consistency）是强一致性，意思是 AB 的数据时刻都是同步的， 如果我们放弃了强一致性，不代表我们的数据就是一定是不一致的了，我们可以让 A 先写入本地，等到通信恢复了再同步给 B，这就是所谓的最终一致性，长远的看我们的数据还是一致的，我们只是在某一个时间窗口里数据不一致罢了。 如果这个时间窗口小过了用户逻辑处理的时间。那么其实对于用户来说根本感觉不到。
现实中的 CAP CAP 对实际工作缺乏指导性。</description>
    </item>
    
    <item>
      <title>config</title>
      <link>https://ikingye.github.io/note-cs/docs/others/tool/dev/ssh/config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/others/tool/dev/ssh/config/</guid>
      <description>config my config ################ vps ################ Host bcc HostName 106.13.4.39 User root IdentityFile ~/.ssh/id_rsa Host vultr HostName 149.28.142.246 User root IdentityFile ~/.ssh/id_rsa ################ baidu ################ Host baidu HostName relay.baidu-int.com User yewang ################ git ################ Host github HostName github.com User git IdentityFile ~/.ssh/id_rsa Host gitlab HostName gitlab.com User git IdentityFile ~/.ssh/id_rsa Host bitbucket HostName bitbucket.org User git IdentityFile ~/.ssh/id_rsa Host gitcafe HostName e.coding.net User git IdentityFile ~/.ssh/id_rsa Host gitee HostName gitee.com User git IdentityFile ~/.</description>
    </item>
    
    <item>
      <title>GDB 教程</title>
      <link>https://ikingye.github.io/note-cs/docs/others/skill/debug/gdb/tutorial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/others/skill/debug/gdb/tutorial/</guid>
      <description>GDB 教程 </description>
    </item>
    
    <item>
      <title>Jquery</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/fe/lib/jquery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/fe/lib/jquery/</guid>
      <description>Jquery </description>
    </item>
    
    <item>
      <title>LDS</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/be/proxy/envoy/xds/lds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/be/proxy/envoy/xds/lds/</guid>
      <description>LDS 监听器发现服务（LDS）是一个可选的 API，Envoy 将调用它来动态获取监听器。Envoy 将协调 API 响应，并根据需要添加、修改或删除已知的监听器。
监听器更新的语义如下：
 每个监听器必须有一个独特的名字。如果没有提供名称，Envoy 将创建一个 UUID。要动态更新的监听器，管理服务必须提供监听器的唯一名称。 当一个监听器被添加，在参与连接处理之前，会先进入 “预热” 阶段。例如，如果监听器引用 RDS 配置，那么在监听器迁移到 “active” 之前，将会解析并提取该配置。 监听器一旦创建，实际上就会保持不变。因此，更新监听器时，会创建一个全新的监听器（使用相同的侦听套接字）。新增加的监听者都会通过上面所描述的相同 “预热” 过程。 当更新或删除监听器时，旧的监听器将被置于 “draining（逐出）” 状态，就像整个服务重新启动时一样。监听器移除之后，该监听器所拥有的连接，经过一段时间优雅地关闭（如果可能的话）剩余的连接。逐出时间通过 --drain-time-s 选项设置。  注意
 任何在 Envoy 配置中静态定义的监听器都不能通过 LDS API 进行修改或删除。
 </description>
    </item>
    
    <item>
      <title>LLDB 教程</title>
      <link>https://ikingye.github.io/note-cs/docs/others/skill/debug/lldb/tutorial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/others/skill/debug/lldb/tutorial/</guid>
      <description>LLDB 教程 </description>
    </item>
    
    <item>
      <title>Network</title>
      <link>https://ikingye.github.io/note-cs/docs/others/skill/lorawan/chirpstack/network/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/others/skill/lorawan/chirpstack/network/</guid>
      <description>ChirpStack Network Server ChirpStack Network Server is an open-source LoRaWAN network-server. https://www.chirpstack.io
数据库    Schema Name Type Owner     public code_migration table chirpstack_ns   public device table chirpstack_ns   public device_activation table chirpstack_ns   public device_activation_id_seq sequence chirpstack_ns   public device_multicast_group table chirpstack_ns   public device_profile table chirpstack_ns   public device_queue table chirpstack_ns   public device_queue_id_seq sequence chirpstack_ns   public gateway table chirpstack_ns   public gateway_board table chirpstack_ns   public gateway_profile table chirpstack_ns   public gateway_profile_extra_channel table chirpstack_ns   public gateway_profile_extra_channel_id_seq sequence chirpstack_ns   public gateway_stats table chirpstack_ns   public gateway_stats_id_seq sequence chirpstack_ns   public gorp_migrations table chirpstack_ns   public multicast_group table chirpstack_ns   public multicast_queue table chirpstack_ns   public multicast_queue_id_seq sequence chirpstack_ns   public routing_profile table chirpstack_ns   public service_profile table chirpstack_ns    (21 rows)</description>
    </item>
    
    <item>
      <title>Salesforce</title>
      <link>https://ikingye.github.io/note-cs/docs/domain/cc/others/saas/crm/salesforce/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/domain/cc/others/saas/crm/salesforce/</guid>
      <description>Salesforce </description>
    </item>
    
    <item>
      <title>VSCode Debug</title>
      <link>https://ikingye.github.io/note-cs/docs/others/tool/dev/vscode/debug/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/others/tool/dev/vscode/debug/</guid>
      <description>VSCode Debug 参考：
  USER GUIDE - Debugging
  Debug C++ in Visual Studio Code
  </description>
    </item>
    
    <item>
      <title>与 C 的差异</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/cpp/basic/grammar/vs-c/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/cpp/basic/grammar/vs-c/</guid>
      <description>C++ 与 C 语言的差异  字符字面量的大小 // 在C++中，字符字面量的大小是一个字节。 sizeof(&amp;#39;c&amp;#39;) == 1 // 在C语言中，字符字面量的大小与int相同。 sizeof(&amp;#39;c&amp;#39;) == sizeof(10)  函数原型与函数定义匹配 // C++ 的函数原型与函数定义是严格匹配的 void func(); // 这个函数不能接受任何参数  // 而在C语言中 void func(); // 这个函数能接受任意数量的参数  NULL vs nullptr // 在 C++ 中，用 nullptr 代替 C 语言中的 NULL int* ip = nullptr;  同文件 // C++ 也可以使用 C 语言的标准头文件， // 但是需要加上前缀 “c” 并去掉末尾的 “.h”。 #include &amp;lt;cstdio&amp;gt;  </description>
    </item>
    
    <item>
      <title>与 C&#43;&#43; 的差异</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/c/basic/grammar/vs-cpp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/c/basic/grammar/vs-cpp/</guid>
      <description>C 语言与 C++ 的差异 参考：C++ 学习笔记</description>
    </item>
    
    <item>
      <title>关注</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/csharp/appendix/attention/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/csharp/appendix/attention/</guid>
      <description>关注 其他 octocat/Spoon-Knife </description>
    </item>
    
    <item>
      <title>关注</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/kotlin/appendix/attention/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/kotlin/appendix/attention/</guid>
      <description>关注 其他 octocat/Spoon-Knife </description>
    </item>
    
    <item>
      <title>关注</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/lua/appendix/attention/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/lua/appendix/attention/</guid>
      <description>关注 其他 octocat/Spoon-Knife </description>
    </item>
    
    <item>
      <title>关注</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/ruby/appendix/attention/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/ruby/appendix/attention/</guid>
      <description>关注 其他 octocat/Spoon-Knife </description>
    </item>
    
    <item>
      <title>关注</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/swift/appendix/attention/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/swift/appendix/attention/</guid>
      <description>关注 其他 octocat/Spoon-Knife </description>
    </item>
    
    <item>
      <title>关注</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/arch/scene/circuit-breaker/attention/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/arch/scene/circuit-breaker/attention/</guid>
      <description>关注 其他 resilience4j/resilience4j ehcache/ehcache3  ehcache 是 ​​ 一个用 Java 实现的使用简单，高速，实现线程安全的缓存管理类库， ehcache 提供了用内存，磁盘文件存储，以及分布式存储方式等多种灵活的 cache 管理方案。 http://www.ehcache.org
Netflix/Hystrix Hystrix 是 Netflix OSS 的一部分，是微服务领域的领先的熔断工具。Hystrix 可以被视为白盒监控工具，而 Istio 可以被视为黑盒监控工具，
Istio 是无缝衔接服务，istio 可以在不更改应用程序代码的情况下配置和使用。Hystrix 的使用需要更改每个服务来引入 Hystrix libraries。</description>
    </item>
    
    <item>
      <title>函数</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/cpp/basic/grammar/function/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/cpp/basic/grammar/function/</guid>
      <description>函数 函数参数 参数默认值
// 你可以为函数的参数指定默认值， // 默认参数必须放在所有的常规参数之后。 void doSomethingWithInts(int a, int b = 1, int c = 4) { } 函数重载 // C++支持函数重载，你可以定义一组名称相同而参数不同的函数 void print(char const* myString) { printf(&amp;#34;String %s\n&amp;#34;, myString); } void print(int myInt) { printf(&amp;#34;My int is %d&amp;#34;, myInt); } int main() { print(&amp;#34;Hello&amp;#34;); // 解析为 void print(const char*)  print(15); // 解析为 void print(int) } </description>
    </item>
    
    <item>
      <title>命令</title>
      <link>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/command/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/command/</guid>
      <description>Docker 命令 docker ps docker ps vs docker container ls Management Commands vs Commands
Docker 1.13+ introduced grouped commands to help organize a bunch of Docker commands. Both commands do the same thing.
For example docker container ls is the new way to do docker ps.
Sure it’s more typing, but it’s a lot more clear on what it does. Likewise, now you can run docker image ls, docker network ls or docker volume ls.</description>
    </item>
    
    <item>
      <title>指针</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/cpp/basic/grammar/pointer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/cpp/basic/grammar/pointer/</guid>
      <description>C++ 指针 智能指针    指针类别 支持 备注     unique_ptr C++ 11 拥有独有对象所有权语义的智能指针   shared_ptr C++ 11 拥有共享对象所有权语义的智能指针   weak_ptr C++ 11 到 std::shared_ptr 所管理对象的弱引用   auto_ptr C++ 17 中移除 拥有严格对象所有权语义的智能指针    unique_ptr std::unique_ptr 是通过指针占有并管理另一对象，并在 unique_ptr 离开作用域时释放该对象的智能指针。在下列两者之一发生时用关联的删除器释放对象：
 销毁了管理的 unique_ptr 对象 通过 operator= 或 reset () 赋值另一指针给管理的 unique_ptr 对象。  shared_ptr std::shared_ptr 是通过指针保持对象共享所有权的智能指针。多个 shared_ptr 对象可占有同一对象。下列情况之一出现时销毁对象并解分配其内存：
 最后剩下的占有对象的 shared_ptr 被销毁； 最后剩下的占有对象的 shared_ptr 被通过 operator= 或 reset () 赋值为另一指针。  有两种方式创建 shared_ptr ：</description>
    </item>
    
    <item>
      <title>推荐软件</title>
      <link>https://ikingye.github.io/note-cs/docs/others/tool/recommend/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/others/tool/recommend/</guid>
      <description>推荐软件 MacOS 开发 iTerm Keyboard Maestro  参考  jaywcjlove/awesome-mac  Windows todoiOS todoAndroid todoLinux todo </description>
    </item>
    
    <item>
      <title>版本</title>
      <link>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/version/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/version/</guid>
      <description>Docker 版本 查看版本 docker -v
 版本变更 最新版本 19.03 (2019-07-22) 18.09 (2018-11-08) Docker 合并版本号 New in 18.09 is an aligned release model for Docker Engine - Community and Docker Engine - Enterprise. The new versioning scheme is YY.MM.x where x is an incrementing patch version. The enterprise engine is a superset of the community engine. They will ship concurrently with the same x patch version based on the same code base.</description>
    </item>
    
    <item>
      <title>端口</title>
      <link>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/port/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/port/</guid>
      <description>Docker 端口 端口映射  -P（大写）：将容器内部开放的网络端口随机映射到宿主机的一个端口上 -p（小写）：指定要映射的端口，一个指定端口上只可以绑定一个容器  可以有多个 -p    端口映射格式 # 指定 ip、指定宿主机 port、指定容器 port ip:hostport:containerport # 指定 ip、未指定宿主机 port（随机）、指定容器 port ip::containerport # 未指定 ip、指定宿主机 port、指定容器 port hostport:containerport 端口映射命令 # 将容器暴露的所有端口，都随机映射到宿主机上（不推荐） docker run -P -it ubuntu /bin/bash # 将容器指定端口随机映射到宿主机一个随机端口 docker run -P 80 -it ubuntu /bin/bash # 将容器指定端口，随机映射到宿主机的指定 ip 的随机端口 # 有两个冒号 : docker run -P 192.168.0.100::80 -it ubuntu /bin/bash # 将容器指定端口指定映射到宿主机的指定端口上 docker run -p 8000:80 -it ubuntu /bin/bash # 将容器指定端口，指定映射到宿主机指定 ip 和端口 # 只能访问 192.</description>
    </item>
    
    <item>
      <title>设备发现</title>
      <link>https://ikingye.github.io/note-cs/docs/others/skill/onvif/discovery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/others/skill/onvif/discovery/</guid>
      <description>设备发现 我们传统的 Web Services 服务调用的模式都是这样的：客户端在设计时就预先知道目标服务的地址（IP 地址或者域名），客户端基于这个地址进行服务调用。
那如果客户端预先不知道目标服务的地址该怎么办？
WS-Discovery（全称为 Web Services Dynamic Discovery）标准就是用于解决该问题的，遵循该标准，客户端预先不知道目标服务地址的情况下，可以动态地探测到可用的目标服务，以便进行服务调用。这个过程就是「设备发现」的过程。
WS-Discovery 模式 WS-Discovery 定义了两种模式：Ad hoc 模式和 Managed 模式。
Ad hoc 模式  Ad hoc 模式：客户端以多播 (multicast) 的形式往多播组 (multicast group) 发送一个 Probe（探测）消息搜寻目标服务，在该探测消息中，包含相应的搜寻条件。如果目标服务满足该条件，则直接将响应 ProbeMatch 消息（服务自身相关的信息，包括地址）回复给客户端。  Message Exchanges in an ad hoc mode. Message exchanges in an ad hoc mode in the presence of a Discovery Proxy. Managed 模式  Managed 模式：即代理模式。Ad hoc 模式有个局限性，只能局限于一个较小的网络。Managed 模式就是为了解决这个问题的，在 Managed 模式下，一个维护所有可用目标服务的中心发现代理（Discovery Proxy）被建立起来，客户端只需要将探测消息发送到该发现代理就可以得到相应的目标服务信息。  Message exchanges in a managed mode.</description>
    </item>
    
    <item>
      <title>容器</title>
      <link>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/container/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/container/</guid>
      <description>Docker 容器 </description>
    </item>
    
    <item>
      <title>仓库</title>
      <link>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/repository/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/repository/</guid>
      <description>Docker 仓库 </description>
    </item>
    
    <item>
      <title>GAE</title>
      <link>https://ikingye.github.io/note-cs/docs/domain/cc/others/paas/gae/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/domain/cc/others/paas/gae/</guid>
      <description>Google App Engine </description>
    </item>
    
    <item>
      <title>homebrew</title>
      <link>https://ikingye.github.io/note-cs/docs/others/tool/dev/package-manager/brew/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/others/tool/dev/package-manager/brew/</guid>
      <description>Homebrew tap brew tap 可以为 brew 的软件的 跟踪，更新，安装添加更多的的 tap formulae
如果你在核心仓库没有找到你需要的软件，那么你就需要安装第三方的仓库去安装你需要的软件
tap 命令的仓库源默认来至于 Github，但是这个命令也不限制于这一个地方
brew tap 没有参数会自动更新已经存在的 tap 并列出当前已经 tapped 的仓库
# URL 默认是 https://github.com/user/homebrew-repo brew tap &amp;lt;user&amp;gt;/&amp;lt;repo&amp;gt; brew tap &amp;lt;user&amp;gt;/&amp;lt;homebrew-repo&amp;gt; # URL 可以是任何位置，任何协议 brew tap &amp;lt;user&amp;gt;/&amp;lt;repo&amp;gt; URL homebrew/core 默认是最高优先级
可以使用 brew tap-pin username/repo 使这个仓库优先级高于 core
使用 brew-tap-unpin username/repo 取消
当你使用 brew install foo 这个命令时，brew 将按照下面的顺序去查找哪个 formula(tap) 将被使用:
 pinned taps core formulae other taps   镜像加速 清华大学镜像 替换现有上游</description>
    </item>
    
    <item>
      <title>HHKB</title>
      <link>https://ikingye.github.io/note-cs/docs/others/tool/dev/hhkb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/others/tool/dev/hhkb/</guid>
      <description>HHKB 键盘 Happy Hacking Keyboard
使用 方向键 右侧的 Fn 键 + [ / ; &#39;</description>
    </item>
    
    <item>
      <title>4G</title>
      <link>https://ikingye.github.io/note-cs/docs/others/communication/4g/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/others/communication/4g/</guid>
      <description>4G </description>
    </item>
    
    <item>
      <title>5G</title>
      <link>https://ikingye.github.io/note-cs/docs/others/communication/5g/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/others/communication/5g/</guid>
      <description>5G 5G 速度 世界上最快的 4G 网速（挪威，63.13Mbps）
最快的宽带网速（新加坡，189Mbps）
2019 年 1 月 24 日，华为发布业界标杆 5G 多模终端芯片巴龙 5000
在 5G 峰值下载速率是 4G LTE 可体验速率的 10 倍
5G 应用场景 国际电信联盟无线电通信局（ITU-R）定义了 5G 的三大典型应用场景为：
 增强型移动宽带（eMBB） 超可靠低时延通信（uRLLC） 海量大规模连接物联网（mMTC）  增强型移动宽带（eMBB） eMBB 主要面向虚拟现实（VR）/ 增强现实（AR）、在线 4K 视频等高带宽需求业务
超可靠低时延通信（uRLLC） mMTC 主要面向智慧城市、智能交通等高连接密度需求的业务
海量大规模连接物联网（mMTC） uRLLC 主要面向车联网、无人驾驶、无人机等时延敏感的业务。
 5G 架构 5G 核心网采用控制面（SMF：Session Management Function）和用户面 UPF 分离的 CUPS（Control and User Plane Separation ）架构
5G 控制面集中部署，一个控制面（SMF）可以同时管理很多个 UPF 而不影响 5G 核心网的性能； 5G 用户面分散部署，UPF 可以按需灵活分布部署，部署到网络边缘支持边缘计算。</description>
    </item>
    
    <item>
      <title>ACID</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/arch/principle/acid/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/arch/principle/acid/</guid>
      <description>ACID  In computer science, ACID (atomicity, consistency, isolation, durability) is a set of properties of database transactions intended to guarantee validity even in the event of errors, power failures, etc. In the context of databases, a sequence of database operations that satisfies the ACID properties (and these can be perceived as a single logical operation on the data) is called a transaction.
  ACID，是指数据库管理系统（DBMS）在写入或更新资料的过程中，为保证事务（transaction）是正确可靠的，所必须具备的四个特性：
 原子性（Atomicity 又称不可分割性）  一个事务（transaction）中的所有操作，或者全部完成，或者全部不完成，不会结束在中间某个环节。事务在执行过程中发生错误，会被回滚（Rollback）到事务开始前的状态，就像这个事务从来没有执行过一样。即，事务不可分割、不可约简。   一致性（Consistency）  在事务开始之前和事务结束以后，数据库的完整性没有被破坏。这表示写入的资料必须完全符合所有的预设约束、触发器、级联回滚等。   隔离性（isolation，又称独立性）  数据库允许多个并发事务同时对其数据进行读写和修改的能力，隔离性可以防止多个事务并发执行时由于交叉执行而导致数据的不一致。事务隔离分为不同级别，包括未提交读（Read uncommitted）、提交读（read committed）、可重复读（repeatable read）和串行化（Serializable）。   持久性（Durability）  事务处理结束后，对数据的修改就是永久的，即便系统故障也不会丢失。     ACID 是追求 CAP 的一致性 </description>
    </item>
    
    <item>
      <title>Application</title>
      <link>https://ikingye.github.io/note-cs/docs/others/skill/lorawan/chirpstack/application/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/others/skill/lorawan/chirpstack/application/</guid>
      <description>ChirpStack Application Server ChirpStack Application Server is an open-source LoRaWAN application-server. https://www.chirpstack.io
数据库    Schema Name Type Owner     public application table chirpstack_as   public application_id_seq sequence chirpstack_as   public code_migration table chirpstack_as   public device table chirpstack_as   public device_activation table chirpstack_as   public device_activation_id_seq sequence chirpstack_as   public device_keys table chirpstack_as   public device_multicast_group table chirpstack_as   public device_profile table chirpstack_as   public fuota_deployment table chirpstack_as   public fuota_deployment_device table chirpstack_as   public gateway table chirpstack_as   public gateway_ping table chirpstack_as   public gateway_ping_id_seq sequence chirpstack_as   public gateway_ping_rx table chirpstack_as   public gateway_ping_rx_id_seq sequence chirpstack_as   public gateway_profile table chirpstack_as   public gorp_migrations table chirpstack_as   public integration table chirpstack_as   public integration_id_seq sequence chirpstack_as   public multicast_group table chirpstack_as   public network_server table chirpstack_as   public network_server_id_seq sequence chirpstack_as   public organization table chirpstack_as   public organization_id_seq sequence chirpstack_as   public organization_user table chirpstack_as   public organization_user_id_seq sequence chirpstack_as   public remote_fragmentation_session table chirpstack_as   public remote_multicast_class_c_session table chirpstack_as   public remote_multicast_setup table chirpstack_as   public service_profile table chirpstack_as   public user table chirpstack_as   public user_id_seq sequence chirpstack_as    (33 rows)</description>
    </item>
    
    <item>
      <title>BASE</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/arch/principle/base/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/arch/principle/base/</guid>
      <description>BASE Basically Available, Soft state, Eventual consistency
BASE 理论是 CAP 理论中的 AP 的延伸，是对互联网大规模分布式系统的实践总结，强调可用性。
基本可用  流量削峰  在不同的时间，出售不同区域的票，将访问请求错开，削弱请求峰值   延迟响应  在春运期间，自己提交的购票请求，往往会在队列中排队等待处理，可能几分钟或十几分钟后，系统才开始处理，然后响应处理结果   体验降级  比如用小图片来替代原始图片，通过降低图片的清晰度和大小，提升系统的处理能力。   过载保护  把接收到的请求放在指定的队列中排队处理，如果请求等待时间超时了（假设是 100ms），这个时候直接拒绝超时请求；再比如队列满了之后，就清除队列中一定数量的排队请求，保护系统不过载，实现系统的基本可用。    最终的一致  读时修复：在读取数据时，检测数据的不一致，进行修复。  比如 Cassandra 的 Read Repair 实现，具体来说，在向 Cassandra 系统查询数据的时候，如果检测到不同节点的副本数据不一致，系统就自动修复数据。   写时修复：在写入数据，检测数据的不一致时，进行修复。  比如 Cassandra 的 Hinted Handoff 实现。具体来说，Cassandra 集群的节点之间远程写数据的时候，如果写失败就将数据缓存下来，然后定时重传，修复数据的不一致性。 写时修复不需要做数据一致性对比，性能消耗比较低，对系统运行影响也不大，推荐在实现最终一致性时优先实现这种方式。   异步修复：这个是最常用的方式，通过定时对账检测副本数据的一致性，并修复。   BASE 是追求 CAP 的可用性 </description>
    </item>
    
    <item>
      <title>brpc</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/be/microservices/rpc/brpc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/be/microservices/rpc/brpc/</guid>
      <description>brpc  </description>
    </item>
    
    <item>
      <title>CDS</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/be/proxy/envoy/xds/cds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/be/proxy/envoy/xds/cds/</guid>
      <description>CDS </description>
    </item>
    
    <item>
      <title>Heroku</title>
      <link>https://ikingye.github.io/note-cs/docs/domain/cc/others/paas/heroku/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/domain/cc/others/paas/heroku/</guid>
      <description>Heroku </description>
    </item>
    
    <item>
      <title>Mas</title>
      <link>https://ikingye.github.io/note-cs/docs/others/tool/dev/mas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/others/tool/dev/mas/</guid>
      <description>mas-cli/mas  Each application in the Mac App Store has a product identifier which is also used for mas-cli commands. Using mas list will show all installed applications and their product identifiers.
$ mas list 446107677 Screens 407963104 Pixelmator 497799835 Xcode $ mas search Xcode 497799835 Xcode 688199928 Docs for Xcode 449589707 Dash 3 - API Docs &amp;amp; Snippets. Integrates with Xcode, Alfred, TextWrangler and many more. [...] $ mas install 808809998 ==&amp;gt; Downloading PaintCode 2 ==&amp;gt; Installed PaintCode 2 # If you want to install the first result that the search command returns, use the lucky command.</description>
    </item>
    
    <item>
      <title>picgo</title>
      <link>https://ikingye.github.io/note-cs/docs/others/tool/dev/picgo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/others/tool/dev/picgo/</guid>
      <description>picgo CLI 命令 PicGo/PicGo-Core  Molunerfinn/PicGo  </description>
    </item>
    
    <item>
      <title>protobuf</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/be/microservices/rpc/protobuf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/be/microservices/rpc/protobuf/</guid>
      <description>protobuf  </description>
    </item>
    
    <item>
      <title>tmux</title>
      <link>https://ikingye.github.io/note-cs/docs/others/tool/dev/tmux/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/others/tool/dev/tmux/</guid>
      <description>tmux 配置 ChrisJohnsen/tmux-MacOSX-pasteboard  Using the Mac OS X programs pbpaste and pbcopy under tmux does not work.
Other services and unpatched builds of screen are also affected.
gpakosz/.tmux  Oh My Tmux!
cd git clone https://github.com/gpakosz/.tmux.git ln -s -f .tmux/.tmux.conf cp .tmux/.tmux.conf.local .  教程 tmux 2: Productive Mouse-Free Development by @bphogan. </description>
    </item>
    
    <item>
      <title>UML</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/se/uml/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/se/uml/</guid>
      <description>UML 泛化关系 (generalization)  is-a 最终代码中，泛化关系表现为继承非抽象类  带空心三角形箭头的直线
实现关系 (realize)  最终代码中，实现关系表现为继承抽象类  带空心三角形箭头的虚线
聚合关系 (aggregation)  表示整体由部分构成的语义  例如一个部门由多个员工组成   整体和部分不是强依赖的，即使整体不存在了，部分仍然存在  例如， 部门撤销了，人员不会消失，他们依然存在    带空心菱形箭头的直线
组合关系 (composition)  表示整体由部分构成的语义  比如公司由多个部门组成   是一种强依赖的特殊聚合关系，如果整体不存在了，则部分也不存在了  例如， 公司不存在了，部门也将不存在了    带实心菱形箭头直线
关联关系 (association)  它一般用来定义对象之间静态的、天然的结构；通常与运行状态无关 所以，关联关系是一种 &amp;ldquo;强关联&amp;rdquo; 的关系  比如，乘车人和车票之间就是一种关联关系；学生和学校就是一种关联关系   在最终代码中，关联对象通常是以成员变量的形式实现的  带箭头的直线
依赖关系 (dependency)  描述一个对象在运行期间会用到另一个对象的关系 是一种临时性的关系，通常在运行期间产生，并且随着运行时的变化，依赖关系也可能发生变化 在最终代码中，依赖关系体现为类构造方法及类方法的传入参数，箭头的指向为调用关系  依赖关系除了临时知道对方外，还是 &amp;ldquo;使用&amp;rdquo; 对方的方法和属性；    带箭头的虚线</description>
    </item>
    
    <item>
      <title>命名空间</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/cpp/basic/grammar/namespace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/cpp/basic/grammar/namespace/</guid>
      <description>C++ 命名空间 // 命名空间为变量、函数和其他声明提供了分离的的作用域。 // 命名空间可以嵌套使用。  namespace First { namespace Nested { void foo() { printf(&amp;#34;This is First::Nested::foo\n&amp;#34;); } } // 结束嵌套的命名空间Nested } // 结束命名空间First  namespace Second { void foo() { printf(&amp;#34;This is Second::foo\n&amp;#34;) } } void foo() { printf(&amp;#34;This is global foo\n&amp;#34;); } int main() { // 如果没有特别指定，就从“Second”中取得所需的内容。  using namespace Second; foo(); // 显示“This is Second::foo”  First::Nested::foo(); // 显示“This is First::Nested::foo”  ::foo(); // 显示“This is global foo” } </description>
    </item>
    
    <item>
      <title>常见错误</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/db/postgresql/basic/practice/error/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/db/postgresql/basic/practice/error/</guid>
      <description>PostgreSQL 常见错误 权限 permission denied for relation 解决 1:
 以 superUser 进入数据库  psql -U postgres -d postgres   切换到 mydb 数据库  \c mydb   赋予所有表的所有权限给 xiaoming  GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO xiaoming;   赋予 wechart 用户，tuser 表的所有权限  GRANT ALL PRIVILEGES ON tuser TO wechart;    解决 2：
ERROR: permission denied for relation hycom 权限被拒绝
 检查数据库连接 检查数据库拥有者和配置的是否一样 访问不同的数据库分区 @TableName (&amp;ldquo;分区名。表名&amp;rdquo;) @TableField (exist = false) 取消数据库映射  </description>
    </item>
    
    <item>
      <title>引用</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/cpp/basic/grammar/reference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/cpp/basic/grammar/reference/</guid>
      <description>C++ 引用   引用是一种特殊的指针类型，一旦被定义就不能重新赋值，并且不能被设置为空值。
  使用引用时的语法与原变量相同
 对引用类型进行解引用时，不需要使用 * 赋值时也不需要用 &amp;amp; 来取地址  using namespace std; string foo = &amp;#34;I am foo&amp;#34;; string bar = &amp;#34;I am bar&amp;#34;; string&amp;amp; fooRef = foo; // 建立了一个对foo的引用。 fooRef += &amp;#34;. Hi!&amp;#34;; // 通过引用来修改foo的值 cout &amp;lt;&amp;lt; fooRef; // &amp;#34;I am foo. Hi!&amp;#34; // 这句话的并不会改变fooRef的指向，其效果与“foo = bar”相同。 // 也就是说，在执行这条语句之后，foo == &amp;#34;I am bar&amp;#34;。 fooRef = bar;   不能修改一个常量引用的值
const string&amp;amp; barRef = bar; // 建立指向bar的常量引用。 // 和C语言中一样，（指针和引用）声明为常量时，对应的值不能被修改。 barRef += &amp;#34;.</description>
    </item>
    
    <item>
      <title>数据卷</title>
      <link>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/volume/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/volume/</guid>
      <description>Docker 数据卷 </description>
    </item>
    
    <item>
      <title>版本</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/db/postgresql/basic/version/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/db/postgresql/basic/version/</guid>
      <description>PostgreSQL 版本 12 12.2  </description>
    </item>
    
    <item>
      <title>A/B 测试</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/arch/scene/release/ab-testing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/arch/scene/release/ab-testing/</guid>
      <description>A/B 测试 A/B testing
 参考 </description>
    </item>
    
    <item>
      <title>Dockerfile</title>
      <link>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/dockerfile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/dockerfile/</guid>
      <description>Dockerfile 教程 CMD # exec form, preferredCMD [&amp;#34;executable&amp;#34;,&amp;#34;param1&amp;#34;,&amp;#34;param2&amp;#34;]# shell formCMD command param1 param2# as default parameters to ENTRYPOINTCMD [&amp;#34;param1&amp;#34;,&amp;#34;param2&amp;#34;]# 下面两者是等价的CMD echo &amp;#34;hello cmd!&amp;#34;CMD [&amp;#34;/bin/bash&amp;#34;, &amp;#34;-c&amp;#34;, &amp;#34;echo &amp;#39;hello cmd!&amp;#39;&amp;#34;]docker run 时指定了命令或者有 ENTRYPOINT，那么 CMD 就会被覆盖
Dockerfile 文件中可以存在多个 CMD 指令，但仅有最后一个会生效。  ENTRYPOINT  docker run 使用 --entrypoint，则覆盖 Dockerfile 的 ENTRYPOINT 如何 ENTRYPOINT 使用中括号形式  docker run 带了参数，则参数会加给 ENTRYPOINT 定义了 CMD，则 CMD 的参数会加给 ENTRYPOINT    # exec form, preferredENTRYPOINT [&amp;#34;executable&amp;#34;, &amp;#34;param1&amp;#34;, &amp;#34;param2&amp;#34;]# shell formENTRYPOINT command param1 param2# ENTRYPOINT 使用中括号时，也可以直接指定命令# 而 CMD 不行，必须带上 shell 命令做前缀ENTRYPOINT [&amp;#34;/start.</description>
    </item>
    
    <item>
      <title>EDS</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/be/proxy/envoy/xds/eds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/be/proxy/envoy/xds/eds/</guid>
      <description>EDS </description>
    </item>
    
    <item>
      <title>Markdown 文件生成 TOC</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/php/appendix/snippet/simple-php-github-toc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/php/appendix/snippet/simple-php-github-toc/</guid>
      <description>生成 Github Readme 文件 TOC 目录 的简单脚本 &amp;lt;?php /** * site: https://github.com/xingshaocheng/simple-php-github-toc */ if(count($argv) &amp;lt; 2){ exit(&amp;#34;Please input github file url, eg &amp;#39;php github-toc.php https://github.com/xingshaocheng/architect-awesome/blob/master/README.md&amp;#39;.\n&amp;#34;); } $url = $argv[1]; #$url = &amp;#34;https://github.com/xingshaocheng/architect-awesome/blob/master/README.md&amp;#34;;  function get_anchor($content){ preg_match_all(&amp;#34;/href=\&amp;#34;(.*)\&amp;#34;&amp;gt;/iUs&amp;#34;, $content, $anchor_arr); if(count($anchor_arr) &amp;gt; 0){ return $anchor_arr[1][0]; } return &amp;#34;&amp;#34;; } function get_title($content){ preg_match_all(&amp;#34;/a\&amp;gt;(.*)$/iUs&amp;#34;, $content, $title_arr); if(count($title_arr) &amp;gt; 0){ return trim($title_arr[1][0]); } return &amp;#34;&amp;#34;; } $content = file_get_contents($url); preg_match_all(&amp;#34;/&amp;lt;article(.*)&amp;lt;\/article&amp;gt;/iUs&amp;#34;, $content, $article); $article_html = $article[0][0]; preg_match_all(&amp;#34;/&amp;lt;h([1-6])&amp;gt;(.</description>
    </item>
    
    <item>
      <title>OpenShift</title>
      <link>https://ikingye.github.io/note-cs/docs/domain/cc/others/paas/openshift/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/domain/cc/others/paas/openshift/</guid>
      <description>OpenShift Red Hat OpenShift is a leading hybrid cloud, enterprise Kubernetes application platform. OpenShift 在 Kubernetes 的基础上整合了应用的生命周期管理，包括 image 的编译，持续集成，部署以及更新。
Openshift 以前是 IaaS，现在 Openshift 自己宣称自己搭配 LXC 已经是 PaaS 了，VPS 不是云服务但可以类比为 IaaS。
Openshift 没有 root 权限 参考：openshift 和普通 vps 的区别在哪儿？</description>
    </item>
    
    <item>
      <title>百度</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/scala/basic/practice/baidu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/scala/basic/practice/baidu/</guid>
      <description>百度 Scala 最佳实践 </description>
    </item>
    
    <item>
      <title>金丝雀发布</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/arch/scene/release/canary-rollouts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/arch/scene/release/canary-rollouts/</guid>
      <description>金丝雀发布 canary rollouts
 参考 </description>
    </item>
    
    <item>
      <title>Cloud Foundry</title>
      <link>https://ikingye.github.io/note-cs/docs/domain/cc/others/paas/cloud-foundry/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/domain/cc/others/paas/cloud-foundry/</guid>
      <description>Cloud Foundry Cloud Foundry 提供了云、开发者框架和应用服务的选择，可以更快、更容易的构建、测试、发布和大规模部署应用程序。它是一个开源项目，可通过各种私有云发行版和公有云实例获得。
组件 cloudfoundry/bosh  Cloud Foundry BOSH is an open source tool for release engineering, deployment, lifecycle management, and monitoring of distributed systems.
cloudfoundry/cli  The official command line client for Cloud Foundry https://docs.cloudfoundry.org/cf-cli
cloudfoundry/uaa  CloudFoundry User Account and Authentication (UAA) Server
 Cloud Foundry 缺点 诸如 Cloud Foundry 的 PaaS，用户必须为不同语言、不同框架区分不同的打包方式，这个打包过程是非常具有灾难性的。 而现实往往更糟糕，当在本地跑的好好的应用，由于和远端环境的不一致，在打包后却需要在云端各种调试，最终才能让应用 “平稳” 运行。
而 Docker 的出现改变了一切，它凭借镜像解决了这个问题。Docker 一不做二不休，干脆把完整的操作系统目录也打包进去，如此高的集成度，保证了云端和本地环境的高度一致，并且随时随地轻易地移植。
参考：
 Kubernetes 如何打赢容器之战？  </description>
    </item>
    
    <item>
      <title>RDS</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/be/proxy/envoy/xds/rds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/be/proxy/envoy/xds/rds/</guid>
      <description>RDS </description>
    </item>
    
    <item>
      <title>AppFog</title>
      <link>https://ikingye.github.io/note-cs/docs/domain/cc/others/paas/appfog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/domain/cc/others/paas/appfog/</guid>
      <description>AppFog </description>
    </item>
    
    <item>
      <title>一致性哈希</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/be/distributed/consistent-hashing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/be/distributed/consistent-hashing/</guid>
      <description>一致性哈希 这篇论文中提出了一致性 hash 的概念。
incubator-brpc doc - 一致性哈希
一致性 hash 满足以下四个性质：
 平衡性 (Balance) : 每个节点被选到的概率是 O (1/n)。 单调性 (Monotonicity) : 当新节点加入时， 不会有请求在老节点间移动， 只会从老节点移动到新节点。当有节点被删除时，也不会影响落在别的节点上的请求。 分散性 (Spread) : 当上游的机器看到不同的下游列表时 (在上线时及不稳定的网络中比较常见), 同一个请求尽量映射到少量的节点中。 负载 (Load) : 当上游的机器看到不同的下游列表的时候， 保证每台下游分到的请求数量尽量一致。  </description>
    </item>
    
    <item>
      <title>分布式事务</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/be/distributed/transaction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/be/distributed/transaction/</guid>
      <description>分布式事务 微服务化带来的分布式事务问题 每一个服务内部的数据一致性仍由本地事务来保证。而整个业务层面的全局数据一致性要如何保障呢？
解决方案 分布式事务的实现主要有以下 5 种方案：
 XA 方案 TCC 方案 本地消息表 可靠消息最终一致性方案 最大努力通知方案  如果你真的被问到，可以这么说，我们某某特别严格的场景，用的是 TCC 来保证强一致性；然后其他的一些场景基于阿里的 RocketMQ 来实现分布式事务。
你找一个严格资金要求绝对不能错的场景，你可以说你是用的 TCC 方案；如果是一般的分布式事务场景，订单插入之后要调用库存服务更新库存，库存数据没有资金那么的敏感，可以用可靠消息最终一致性方案。
友情提示一下，RocketMQ 3.2.6 之前的版本，是可以按照上面的思路来的，但是之后接口做了一些改变，我这里不再赘述了。
当然如果你愿意，你可以参考可靠消息最终一致性方案来自己实现一套分布式事务，比如基于 RocketMQ 来玩儿。
参考：
 分布式事务了解吗？你们是如何解决分布式事务问题的？  XA 方案 两阶段提交方案
有一个事务管理器的概念，负责协调多个数据库（资源管理器）的事务，事务管理器先问问各个数据库你准备好了吗？ 如果每个数据库都回复 ok，那么就正式提交事务，在各个数据库上执行操作；如果任何其中一个数据库回答不 ok，那么就回滚事务。
这种分布式事务方案，比较适合单块应用里，跨多个库的分布式事务，而且因为严重依赖于数据库层面来搞定复杂的事务，效率很低，绝对不适合高并发的场景。
如果要玩儿，那么基于 Spring + JTA 就可以搞定，自己随便搜个 demo 看看就知道了。
这个方案，我们很少用，一般来说某个系统内部如果出现跨多个库的这么一个操作，是不合规的。
 TCC 这种方案说实话几乎很少人使用， 因为这个事务回滚实际上是严重依赖于你自己写代码来回滚和补偿了，会造成补偿代码巨大，非常之恶心，业务代码是很难维护的。
比如说我们，一般来说跟钱相关的，跟钱打交道的，支付、交易相关的场景，我们会用 TCC，严格保证分布式事务要么全部成功，要么全部自动回滚，严格保证资金的正确性，保证在资金上不会出现问题。
而且最好是你的各个业务执行的时间都比较短。
TCC 分布式事务框架，比如国内开源的
 ByteTCC himly tcc-transaction  Try 首先你的业务的主流程以及各个接口提供的业务含义，不是说直接完成那个业务操作，而是完成一个 Try 的操作。
这个操作，一般都是锁定某个资源，设置一个预备类的状态，冻结部分数据，等等，大概都是这类操作。
Confirm Cancel 参考：</description>
    </item>
    
    <item>
      <title>在线编程</title>
      <link>https://ikingye.github.io/note-cs/docs/others/tool/study/coding-online/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/others/tool/study/coding-online/</guid>
      <description>在线编程 </description>
    </item>
    
    <item>
      <title>教程</title>
      <link>https://ikingye.github.io/note-cs/docs/domain/ai/deep-learning/tutorial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/domain/ai/deep-learning/tutorial/</guid>
      <description>教程 基础 《深度学习》(花书) MingchaoZhu/DeepLearning  Python for《Deep Learning》，该书为《深度学习》(花书) 数学推导、原理剖析与源码级别代码实现
 进阶  高阶 </description>
    </item>
    
    <item>
      <title>教程</title>
      <link>https://ikingye.github.io/note-cs/docs/domain/ai/tutorial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/domain/ai/tutorial/</guid>
      <description>教程 基础 [book]dod-o/statistical-learning-method_code  手写实现李航《统计学习方法》书中全部算法
[video]shuhuai007/machine-learning-session  【机器学习】【白板推导系列】【合集 1 ～ 23】
tsyw/MachineLearningNotes  My personal notes
Bilibili - 机器学习白板系列
 [video]机器学习教程（小象学院）  josephmisiti/awesome-machine-learning   ZuzooVn/machine-learning-for-software-engineers  A complete daily plan for studying to become a machine learning engineer.
 ageron/handson-ml  A series of Jupyter notebooks that walk you through the fundamentals of Machine Learning and Deep Learning in python using Scikit-Learn and TensorFlow.
 fighting41love/funNLP  NLP 民工的乐园：几乎最全的中文 NLP 资源库</description>
    </item>
    
    <item>
      <title>关注</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/javascript/appendix/attention/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/javascript/appendix/attention/</guid>
      <description>关注 octokit/rest.js  GitHub REST API client for JavaScript https://octokit.github.io/rest.js/</description>
    </item>
    
    <item>
      <title>关注</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/rust/appendix/attention/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/rust/appendix/attention/</guid>
      <description>关注 rust-lang/rust  Empowering everyone to build reliable and efficient software. https://www.rust-lang.org
redox-os/redox  Redox is an operating system written in Rust
servo/servo  The Servo Browser Engine https://servo.org/
rajasekarv/vega  A new arguably faster implementation of Apache Spark from scratch in Rust
 web framework yewstack/yew  Rust / Wasm framework for building client web apps https://yew.rs
SergioBenitez/Rocket  A web framework for Rust. https://rocket.rs
actix/actix-web  Actix web is a small, pragmatic, and extremely fast rust web framework.</description>
    </item>
    
    <item>
      <title>关注</title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/scala/appendix/attention/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/scala/appendix/attention/</guid>
      <description>关注 akka/akka  Build highly concurrent, distributed, and resilient message-driven applications on the JVM https://akka.io</description>
    </item>
    
    <item>
      <title>关注</title>
      <link>https://ikingye.github.io/note-cs/docs/domain/ai/attention/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/domain/ai/attention/</guid>
      <description>关注 机器学习 tensorflow/tensorflow  scikit-learn/scikit-learn  scikit-learn: machine learning in Python https://scikit-learn.org
php-ai/php-ml  PHP-ML - Machine Learning library for PHP https://php-ml.org/
 深度学习 paddlepaddle/paddle   机器人 gunthercox/ChatterBot  ChatterBot is a machine learning, conversational dialog engine for creating chat bots https://chatterbot.readthedocs.io</description>
    </item>
    
    <item>
      <title>关注</title>
      <link>https://ikingye.github.io/note-cs/docs/domain/cc/cn/attention/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/domain/cc/cn/attention/</guid>
      <description>关注 cncf/landscape  The Cloud Native Interactive Landscape filters and sorts hundreds of projects and products, and shows details including GitHub stars, funding or market cap, first and last commits, contributor counts, headquarters location, and recent tweets. https://l.cncf.io
Trail Map CNCF Cloud Native Landscape 
CNCF Serverless Landscape 
 dragonflyoss/Dragonfly  Dragonfly is an intelligent P2P based image and file distribution system.
https://d7y.io</description>
    </item>
    
    <item>
      <title>缓存</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/arch/scene/cache/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/arch/scene/cache/</guid>
      <description>缓存 热点数据集中失效问题
 设置不同的失效时间 互斥锁  缓存穿透 查询不存在的数据
缓存雪崩 当某一时刻发生大规模的缓存失效的情况，比如你的缓存服务宕机了，会有大量的请求进来直接打到 DB 上面。结果就是 DB 称不住，挂掉。
解决  事前：使用集群缓存，保证缓存服务的高可用 事中：ehcache 本地缓存 + Hystrix 限流 &amp;amp; 降级，避免 MySQL 被打死 事后：开启 Redis 持久化机制，尽快恢复缓存集群  参考：
 ehcache/ehcache3    缓存击穿 在平常高并发的系统中，大量的请求同时查询一个 key 时，此时这个 key 正好失效了， 就会导致大量的请求都打到数据库上面去。
缓存击穿实际上是缓存雪崩的一个特例
解决 问题是多个线程同时去查询数据库的这条数据， 我们可以在第一个查询数据的请求上使用一个互斥锁来锁住它。 其他的线程走到这一步拿不到锁就等着，等第一个线程查询到了数据，然后做缓存。 后面的线程进来发现已经有缓存了，就直接走缓存。</description>
    </item>
    
    <item>
      <title>教程</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/arch/tutorial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/arch/tutorial/</guid>
      <description>教程 基础 系统设计入门  学习如何设计可扩展的系统将会有助于你成为一个更好的工程师。
系统设计是一个很宽泛的话题。在互联网上，关于系统设计原则的资源也是多如牛毛。
这个仓库就是这些资源的组织收集，它可以帮助你学习如何构建可扩展的系统。
 进阶 </description>
    </item>
    
    <item>
      <title>教程</title>
      <link>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/tutorial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/tutorial/</guid>
      <description>Docker 教程 play-with-docker/play-with-docker  Play With Docker gives you the experience of having a free Alpine Linux Virtual Machine in the cloud where you can build and run Docker containers and even create clusters with Docker features like Swarm Mode.
Under the hood DIND or Docker-in-Docker is used to give the effect of multiple VMs/PCs.
A live version is available at: http://play-with-docker.com/</description>
    </item>
    
    <item>
      <title>关注</title>
      <link>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/attention/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/attention/</guid>
      <description>关注 moby/moby  Moby Project - a collaborative project for the container ecosystem to assemble container-based systems https://mobyproject.org/
docker/docker-ce  Docker CE https://www.docker.com/community-edition
play-with-docker/play-with-docker  Play With Docker gives you the experience of having a free Alpine Linux Virtual Machine in the cloud where you can build and run Docker containers and even create clusters with Docker features like Swarm Mode.
Under the hood DIND or Docker-in-Docker is used to give the effect of multiple VMs/PCs.</description>
    </item>
    
    <item>
      <title>教程</title>
      <link>https://ikingye.github.io/note-cs/docs/direction/se/tutorial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/direction/se/tutorial/</guid>
      <description>教程 基础 系统设计入门  学习如何设计可扩展的系统将会有助于你成为一个更好的工程师。
系统设计是一个很宽泛的话题。在互联网上，关于系统设计原则的资源也是多如牛毛。
这个仓库就是这些资源的组织收集，它可以帮助你学习如何构建可扩展的系统。
 进阶 </description>
    </item>
    
    <item>
      <title></title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/javascript/basic/practice/spec/baidu/css/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/javascript/basic/practice/spec/baidu/css/</guid>
      <description>CSS 编码规范 1 前言
2 代码风格
2.1 文件
2.2 缩进
2.3 空格
2.4 行长度
2.5 选择器
2.6 属性
3 通用
3.1 选择器
3.2 属性缩写
3.3 属性书写顺序
3.4 清除浮动
3.5 !important
3.6 z-index
4 值与单位
4.1 文本
4.2 数值
4.3 url()
4.4 长度
4.5 颜色
4.6 2D 位置
5 文本编排
5.1 字体族
5.2 字号
5.3 字体风格
5.4 字重
5.5 行高
6 变换与动画
7 响应式
8 兼容性
8.1 属性前缀
8.2 Hack
8.3 Expression</description>
    </item>
    
    <item>
      <title></title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/javascript/basic/practice/spec/baidu/es-next/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/javascript/basic/practice/spec/baidu/es-next/</guid>
      <description>JavaScript 编码规范 - ESNext 补充篇（草案） 1 前言
2 代码风格
2.1 文件
2.2 结构
2.2.1 缩进
2.2.2 空格
2.2.3 语句
3 语言特性
3.1 变量
3.2 解构
3.3 模板字符串
3.4 函数
3.5 箭头函数
3.6 对象
3.7 类
3.8 模块
3.9 集合
3.10 异步
4 环境
4.1 运行环境
4.2 预编译
1 前言 随着 ECMAScript 的不断发展，越来越多更新的语言特性将被使用，给应用的开发带来方便。本文档的目标是使 ECMAScript 新特性的代码风格保持一致，并给予一些实践建议。
本文档仅包含新特性部分。基础部分请遵循 JavaScript Style Guide。
由于 ECMAScript 依然在快速的不断发展，本文档也将可能随时保持更新。更新内容主要涉及对新增的语言特性的格式规范化、实践指导，引擎与编译器环境变化的使用指导。
虽然本文档是针对 ECMAScript 设计的，但是在使用各种基于 ECMAScript 扩展的语言时(如 JSX、TypeScript 等)，适用的部分也应尽量遵循本文档的约定。
任何问题或建议，欢迎跟我们讨论: fe-styleguide@baidu.com</description>
    </item>
    
    <item>
      <title></title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/javascript/basic/practice/spec/baidu/html/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/javascript/basic/practice/spec/baidu/html/</guid>
      <description>HTML 编码规范 1 前言
2 代码风格
2.1 缩进与换行
2.2 命名
2.3 标签
2.4 属性
3 通用
3.1 DOCTYPE
3.2 编码
3.3 CSS 和 JavaScript 引入
4 head
4.1 title
4.2 favicon
4.3 viewport
5 图片
6 表单
6.1 控件标题
6.2 按钮
6.3 可访问性 (A11Y)
7 多媒体
8 模板中的 HTML
1 前言 HTML 作为描述网页结构的超文本标记语言，在百度一直有着广泛的应用。本文档的目标是使 HTML 代码风格保持一致，容易被理解和被维护。
任何问题或建议，欢迎跟我们讨论: fe-styleguide@baidu.com
2 代码风格 2.1 缩进与换行 [强制] 使用 4 个空格做为一个缩进层级，不允许使用 2 个空格 或 tab 字符。 解释： 对于非 HTML 标签之间的缩进，比如 script 或 style 标签内容缩进，与 script 或 style 标签的缩进同级。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/javascript/basic/practice/spec/baidu/react/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/javascript/basic/practice/spec/baidu/react/</guid>
      <description>React 编码规范 1 版本限制
1.1 法律要求
2 文件组织
2.1 命名
2.2 模块化
3 命名规则
3.1 组件
3.2 属性
3.3 高阶组件
4 组件声明
4.1 组件
4.2 属性
4.3 生命周期
4.4 高阶组件
5 组件实现
5.1 更新机制
5.2 纯函数应用
6 JSX
6.1 标签
6.2 属性
6.2.1 层级
1 版本限制 1.1 法律要求 [强制] 使用 React &amp;gt;=15.6.2版本 解释
在15.6.2以前的版本协议带有 Facebook Patents，依据法务风险，严禁使用。
2 文件组织 2.1 命名 [强制] 同一目录下不得拥有同名的.js和.jsx文件。 解释：
在使用模块导入时，倾向于不添加后缀，如果存在同名但不同后缀的文件，构建工具将无法决定哪一个是需要引入的模块。
[强制] 组件文件使用一致的.js或 .jsx后缀。 解释：
所有组件文件的后缀名从.js或.jsx中任选其一。
不应在项目中出现部分组件为.js文件，部分为.jsx的情况。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/javascript/basic/practice/spec/baidu/typescript/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/javascript/basic/practice/spec/baidu/typescript/</guid>
      <description>TypeScript 编码规范 1 前言
2 代码风格
2.1 环境
2.2 文件
2.3 命名
3 语言特性
3.1 变量
3.2 类型
3.3 条件
3.4 循环
3.5 数组
3.6 对象
3.7 函数
3.8 类
3.9 模块
1 前言 随着 TypeScript 的不断发展，越来越多的开发者认可并使用 TypeScript 开发应用。本文档的目标是使 TypeScript 新特性的代码风格保持一致，并给予一些实践建议。
本文档基本遵循 JavaScript Style Guide 与 ES-Next Style Guide。
由于 TypeScript 依然在快速发展，本文档也将随时保持更新。更新内容主要涉及对新增的语言特性的格式规范化、实践指导，引擎与编译器环境变化的使用指导。
任何问题或建议，欢迎跟我们讨论: fe-styleguide@baidu.com
2 代码风格 2.1 环境 [强制] TypeScript 文件使用 .ts 扩展名。含 JSX 语法的 TypeScript 文件使用 .tsx 扩展名。 [建议] tsconfig.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://ikingye.github.io/note-cs/docs/basic/pl/javascript/basic/practice/spec/baidu/vue/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/basic/pl/javascript/basic/practice/spec/baidu/vue/</guid>
      <description>Vue 组件代码规范 1 前言
2 代码风格
2.1 缩进
2.2 单行最长限制
2.3 模块书写顺序
3 template 部分
3.1 根节点
3.2 标签
3.3 属性
3.4 指令
3.5 插值（Mustache）
3.6 空格
3.7 变量
4 javascript 部分
4.1 props
4.2 data
4.3 变量
4.4 其他
5 style 部分
6 参考
1 前言 任何问题或建议，欢迎跟我们讨论: fe-styleguide@baidu.com
2 代码风格 2.1 缩进 [强制] 使用 4 个空格做为一个缩进层级，不允许使用 2 个空格或 tab 字符 2.2 单行最长限制 [强制] 每行不得超过 120 个字符 2.3 模块书写顺序 [建议] template -&amp;gt; script -&amp;gt; style 3 template 部分 3.</description>
    </item>
    
  </channel>
</rss>