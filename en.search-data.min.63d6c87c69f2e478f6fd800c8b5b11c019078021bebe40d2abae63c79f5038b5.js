'use strict';(function(){const indexCfg={cache:true};indexCfg.doc={id:'id',field:['title','content'],store:['title','href'],};const index=FlexSearch.create('balance',indexCfg);window.bookSearchIndex=index;index.add({'id':0,'href':'/note-cs/docs/os/linux/','title':"Linux",'content':"Linux 见：Linux 学习笔记\n"});index.add({'id':1,'href':'/note-cs/docs/tool/editor/vscode/','title':"VSCode",'content':"VSCode 推荐插件 PicGo/vs-picgo https://github.com/PicGo/vs-picgo\n"});index.add({'id':2,'href':'/note-cs/docs/tool/editor/vscode/debug/','title':"VSCode Debug",'content':"VSCode Debug 参考：\n  USER GUIDE - Debugging\n  Debug C++ in Visual Studio Code\n  "});index.add({'id':3,'href':'/note-cs/docs/language/objective-c/appendix/tutorial/','title':"教程",'content':"教程 基础 进阶 高阶 "});index.add({'id':4,'href':'/note-cs/docs/language/scala/appendix/tutorial/','title':"教程",'content':"教程 基础 进阶 高阶 "});index.add({'id':5,'href':'/note-cs/docs/language/objective-c/basic/practice/','title':"最佳实践",'content':"最佳实践 "});index.add({'id':6,'href':'/note-cs/docs/language/objective-c/basic/practice/spec/baidu/','title':"百度",'content':"百度 Objective-C 编码规范 (2019 版) "});index.add({'id':7,'href':'/note-cs/docs/language/objective-c/basic/','title':"第一部分 基础入门",'content':""});index.add({'id':8,'href':'/note-cs/docs/language/scala/basic/','title':"第一部分 基础入门",'content':""});index.add({'id':9,'href':'/note-cs/docs/language/objective-c/basic/practice/spec/','title':"编程规范",'content':"编程规范 "});index.add({'id':10,'href':'/note-cs/docs/computer-composition/','title':"计算机组成原理",'content':"计算机组成原理 "});index.add({'id':11,'href':'/note-cs/docs/compile/make/makefile/','title':"makefile",'content':"makefile 简介 Makefile 用于定义如何创建目标文件，比如如何从源码到可执行文件。创建这一工具的目标是 减少不必要的编译或者任务。传说 Stuart Feldman 在 1976 年花了一个周末写出来的， 而今仍然使用广泛，特别是在 Unix 和 Linux 系统上。\n基础 语法  注释：# 文件名： 必须是 Makefile  区分大小写   make \u0026lt;target\u0026gt; 生成 target  重命名：make -f \u0026quot;filename\u0026quot; \u0026lt;target\u0026gt;   只认识 TAB，不认识空格  但是在 GNU Make 3.82 之后, 可以通过设置参数 .RECIPEPREFIX 进行修改   shell 符号  @：不把命令打印到 stdout -：发生错误了也没关系    target 声明  创建一个 target： targets : prerequisites recipe  prerequisites(依赖) 是可选的, recipe(做法) 也可以多个或者不给 targets 和 prerequisites 都可以是多个, 以空格分割 file2.txt file3.txt: file0.txt file1.txt touch file2.txt touch file3.txt    target 的声明顺序并不重要  上面的依赖可以下面再声明   如果声明重复的 target，make 会给一个 warning，后面会覆盖前面的  但是如果不定义任何 recipe, 就不会冲突, 只是多了依赖关系 file2.txt: file0.txt file3.txt    Phony(假的) Targets  意思是 tagets 并不是文件, 可以想象成一个任务的名字而已 因为不是文件, 无法比对是否有更新, 所以每次 make 都会执行 依赖于 phony target 的 target 也会每次 make 都执行, 即使 target 是文件   .PHONY  如果定义的 phony target 与文件名重名, 可以用 .PHONY 显式地指明哪些 targets 是 phony    常用 phony target  all clean install uninstall  变量与通配符  $^: 代表 prerequisites # 即便分开定义依赖, $^ 依然能拿到 # 非常智能的, ex1.txt 会被找到, file0.txt 会被去重 process: ex1.txt file0.txt @echo $^  $@: 代表 target, 如果 target 为多个, $@ 代表当前执行的那个 $\u0026lt;: prerequisite 中的第一个 $?: 需要更新的 prerequisite 文件列表 $+: 所有依赖, 包括重复的 $|: 竖线后面的 order-only prerequisites $*: target % 那部分, 包括路径 a.%.b: # $* match 的target % 那部分, 包括路径, 比如 `make dir/a.foo.b` 会打出 `dir/foo` @echo $*   模式匹配  make 会找到最具体的匹配  make small/foo.png 则会匹配下面这个规则（在这之前要先有 small/foo.svg 这个文件） %.png: %.svg inkscape --export-png $^ small/%.png: %.svg inkscape --export-png --export-dpi 30 $^    make 已经有一些内置的规则, 比如从 *.c 到 *.o  变量   变量都是字符串类型\n# 这俩是一样一样的 name = Ted name2=\u0026#34;Sarah\u0026#34;   设置变量，按以下顺序由高到低:\n 命令行参数. 比如试试 make echo name3=JICHAO Makefile 里面的 shell 中的环境变量 make 预设的一些变量    ?=\n# 如果 name 被设置过了, 就不设置了 name ?= Jean   override\n# 用 override 可以防止命令行参数设置的覆盖 override name = David ``   +\n# 用加号可以连接 (中间用空格分割) name4 +=grey   内置的变量\necho_inbuilt: echo $(CC) echo ${CXX)} echo $(FC) echo ${CFLAGS)} echo $(CPPFLAGS) echo ${CXXFLAGS} echo $(LDFLAGS) echo ${LDLIBS}   :=\n 等号声明时 recursively expanded 递归扩展 加个冒号可以声明 Simply expanded variables 即时扩展变量, 即只在声明时扩展一次  # var3 声明时找不到 var4, var3 会扩展成 `and good luck`，直接忽视 var4 var3 := $(var4) and good luck # var5 是正常的，扩展为 `good night and good luck` var5 = $(var4) and good luck var4 := good night   函数   函数调用格式\n$(func arg0,arg1,arg2...)   wildcard：将后面的通配符变成一串文件路径\n  patsubst：做替换\n# 把所有 markdown 后缀的文件重命名为 md 后缀 substitue: * @echo $(patsubst %.markdown,%.md,$* $^)   指令  include：引入别的 Makefile 文件 流程控制语句顶格写 sport = tennis # 流程控制语句 (如if else 等等) 顶格写 report: ifeq ($(sport),tennis) @echo \u0026#39;game, set, match\u0026#39; else @echo \u0026#34;They think it\u0026#39;s all over; it is now\u0026#34; endif    分支和变体 GNU make  进阶  原理 "});index.add({'id':12,'href':'/note-cs/docs/language/objective-c/appendix/interview/basic/','title':"基础",'content':"基础面试题 "});index.add({'id':13,'href':'/note-cs/docs/language/scala/appendix/interview/basic/','title':"基础",'content':"基础面试题 "});index.add({'id':14,'href':'/note-cs/docs/os/','title':"操作系统",'content':"操作系统 "});index.add({'id':15,'href':'/note-cs/docs/language/objective-c/priciple/','title':"第二部分 原理",'content':""});index.add({'id':16,'href':'/note-cs/docs/language/scala/priciple/','title':"第二部分 原理",'content':""});index.add({'id':17,'href':'/note-cs/docs/language/objective-c/appendix/interview/advanced/','title':"进阶",'content':"进阶面试题 "});index.add({'id':18,'href':'/note-cs/docs/language/scala/appendix/interview/advanced/','title':"进阶",'content':"进阶面试题 "});index.add({'id':19,'href':'/note-cs/docs/language/objective-c/appendix/interview/','title':"面试题",'content':"面试题 基础题 进阶题 高阶题 "});index.add({'id':20,'href':'/note-cs/docs/language/scala/appendix/interview/','title':"面试题",'content':"面试题 基础题 进阶题 高阶题 "});index.add({'id':21,'href':'/note-cs/docs/compile/make/cmake/','title':"cmake",'content':"cmake "});index.add({'id':22,'href':'/note-cs/docs/os/macos/','title':"MacOS",'content':"MacOS "});index.add({'id':23,'href':'/note-cs/docs/os/windows/','title':"Windows",'content':"Windows "});index.add({'id':24,'href':'/note-cs/docs/data-structure/','title':"数据结构",'content':"数据结构 见：算法学习笔记\n"});index.add({'id':25,'href':'/note-cs/docs/language/objective-c/source/','title':"第三部分 源码实现",'content':""});index.add({'id':26,'href':'/note-cs/docs/language/scala/source/','title':"第三部分 源码实现",'content':""});index.add({'id':27,'href':'/note-cs/docs/language/objective-c/appendix/interview/expert/','title':"高阶",'content':"高阶面试题 "});index.add({'id':28,'href':'/note-cs/docs/language/scala/appendix/interview/expert/','title':"高阶",'content':"高阶面试题 "});index.add({'id':29,'href':'/note-cs/docs/os/unix/','title':"Unix",'content':"Unix "});index.add({'id':30,'href':'/note-cs/docs/language/objective-c/appendix/','title':"第四部分 附录",'content':""});index.add({'id':31,'href':'/note-cs/docs/language/scala/appendix/','title':"第四部分 附录",'content':""});index.add({'id':32,'href':'/note-cs/docs/network/','title':"计算机网络",'content':"计算机网络 见：网络学习笔记\n"});index.add({'id':33,'href':'/note-cs/docs/debug/gdb/','title':"GDB",'content':"GDB "});index.add({'id':34,'href':'/note-cs/docs/compile/make/','title':"make",'content':"make 教程  learn make in y minutes 跟我一起写 Makefile GNU make manual  "});index.add({'id':35,'href':'/note-cs/docs/language/objective-c/basic/practice/snippet/','title':"代码片段",'content':"代码片段 "});index.add({'id':36,'href':'/note-cs/docs/language/scala/basic/spec/baidu/','title':"百度",'content':"百度 Scala 编码规范 前言 就目前 Baidu 内部情况 (2018.10)，Scala 这门语言主要用于计算团队内部的和 Spark 相关项目研发、社区贡献工作以及公司的 Spark 用户使用 Scala API 编写 Spark 作业三个用途，所以本文主体沿用如下两部分并稍作修改：\n Apache Spark 开源社区 Scala 编程指南:\nApache Spark 有超过 1000 位贡献者，就我们所知，应该是目前大数据领域里最大的开源项目且是最活跃的 Scala 项目，结合 Baidu 内部现状，本文主体沿用此部分中和 Spark 社区相关内容，去除部分项目专用细节。 scala 官方 style guide 里的格式部分已包含在 Spark 项目文档中，这里摘录部分官方 style guide 作为 Apache Spark 社区的编程指南补充。  "});index.add({'id':37,'href':'/note-cs/docs/study/tutorial/','title':"编程学习网站",'content':"编程学习网站 基础 Codecademy Programiz  算法 Codewars  进阶 Codeplace 通过实际应用来学习编程。\n"});index.add({'id':38,'href':'/note-cs/docs/compile/','title':"编译原理",'content':"编译原理 "});index.add({'id':39,'href':'/note-cs/docs/os/ios/','title':"iOS",'content':"iOS "});index.add({'id':40,'href':'/note-cs/docs/os/android/','title':"Android",'content':"Android "});index.add({'id':41,'href':'/note-cs/docs/cloud-computing/saas/crm/','title':"CRM",'content':"CRM "});index.add({'id':42,'href':'/note-cs/docs/debug/gdb/tutorial/','title':"GDB 教程",'content':"GDB 教程 "});index.add({'id':43,'href':'/note-cs/docs/tool/dev/git/','title':"git",'content':"git git module git submodule foreach git reset --hard HEAD git submodule update git submodule foreach \u0026#34;git checkout master; git pull\u0026#34; git submodule foreach git clean -f "});index.add({'id':44,'href':'/note-cs/docs/language/go/','title':"Go",'content':"Go 学习笔记 见：Go 学习笔记\n"});index.add({'id':45,'href':'/note-cs/docs/virtual/hyperkit/','title':"HyperKit",'content':"HyperKit "});index.add({'id':46,'href':'/note-cs/docs/cloud-computing/iaas/','title':"IaaS",'content':"IaaS "});index.add({'id':47,'href':'/note-cs/docs/debug/lldb/','title':"LLDB",'content':"LLDB "});index.add({'id':48,'href':'/note-cs/docs/debug/lldb/tutorial/','title':"LLDB 教程",'content':"LLDB 教程 "});index.add({'id':49,'href':'/note-cs/docs/domain/onvif/','title':"ONVIF",'content':"ONVIF 官网：www.onvif.org\n"});index.add({'id':50,'href':'/note-cs/docs/language/python/','title':"Python",'content':"Python 见：Python 学习笔记\n"});index.add({'id':51,'href':'/note-cs/docs/language/rust/','title':"Rust",'content':"Rust 见：Rust 学习笔记\n"});index.add({'id':52,'href':'/note-cs/docs/cloud-computing/saas/crm/salesforce/','title':"Salesforce",'content':"Salesforce "});index.add({'id':53,'href':'/note-cs/docs/virtual/vmware/','title':"VMware Fusion",'content':"VMware Fusion "});index.add({'id':54,'href':'/note-cs/docs/cloud-computing/','title':"云计算",'content':"云计算 "});index.add({'id':55,'href':'/note-cs/docs/tool/dev/','title':"开发者工具",'content':"开发者工具 "});index.add({'id':56,'href':'/note-cs/docs/language/scala/basic/spec/','title':"编程规范",'content':"编程规范 "});index.add({'id':57,'href':'/note-cs/docs/language/','title':"编程语言",'content':"编程语言 "});index.add({'id':58,'href':'/note-cs/docs/cloud-computing/paas/','title':"PaaS",'content':"PaaS "});index.add({'id':59,'href':'/note-cs/docs/cloud-computing/saas/','title':"SaaS",'content':"SaaS "});index.add({'id':60,'href':'/note-cs/docs/cloud-computing/paas/gae/','title':"GAE",'content':"Google App Engine "});index.add({'id':61,'href':'/note-cs/docs/cloud-computing/paas/heroku/','title':"Heroku",'content':"Heroku "});index.add({'id':62,'href':'/note-cs/docs/language/objective-c/','title':"Objective-C",'content':"Objective-C 学习笔记 "});index.add({'id':63,'href':'/note-cs/docs/virtual/parallels/','title':"Parallels",'content':"Parallels "});index.add({'id':64,'href':'/note-cs/docs/language/scala/','title':"Scala",'content':"Scala 学习笔记 "});index.add({'id':65,'href':'/note-cs/docs/virtual/virtualbox/','title':"VirtualBox",'content':"VirtualBox "});index.add({'id':66,'href':'/note-cs/docs/database/','title':"数据库",'content':"数据库 见：数据库学习笔记\n"});index.add({'id':67,'href':'/note-cs/docs/language/scala/basic/practice/','title':"最佳实践",'content':"Scala 最佳实践 "});index.add({'id':68,'href':'/note-cs/docs/debug/','title':"Debug",'content':"Debug "});index.add({'id':69,'href':'/note-cs/docs/cloud-computing/paas/openshift/','title':"OpenShift",'content':"OpenShift Red Hat OpenShift is a leading hybrid cloud, enterprise Kubernetes application platform. OpenShift 在 Kubernetes 的基础上整合了应用的生命周期管理，包括 image 的编译，持续集成，部署以及更新。\nOpenshift 以前是 IaaS，现在 Openshift 自己宣称自己搭配 LXC 已经是 PaaS 了，VPS 不是云服务但可以类比为 IaaS。\nOpenshift 没有 root 权限 参考：openshift 和普通 vps 的区别在哪儿？\n"});index.add({'id':70,'href':'/note-cs/docs/language/scala/basic/snippet/','title':"代码片段",'content':"代码片段 "});index.add({'id':71,'href':'/note-cs/docs/language/scala/basic/practice/baidu/','title':"百度",'content':"百度 Scala 最佳实践 "});index.add({'id':72,'href':'/note-cs/docs/virtual/','title':"虚拟化",'content':"虚拟化 "});index.add({'id':73,'href':'/note-cs/docs/cloud-computing/paas/cloud-foundry/','title':"Cloud Foundry",'content':"Cloud Foundry "});index.add({'id':74,'href':'/note-cs/docs/cloud-computing/paas/appfog/','title':"AppFog",'content':"AppFog "});index.add({'id':75,'href':'/note-cs/docs/study/coding-online/','title':"在线编程",'content':"在线编程 "});index.add({'id':76,'href':'/note-cs/docs/study/','title':"学习",'content':"计算机学习 "});index.add({'id':77,'href':'/note-cs/docs/tool/','title':"工具",'content':"工具 "});index.add({'id':78,'href':'/note-cs/docs/tool/editor/','title':"编辑器",'content':"编辑器 "});index.add({'id':79,'href':'/note-cs/docs/domain/','title':"领域",'content':"领域 "});index.add({'id':80,'href':'/note-cs/categories/','title':"Categories",'content':""});index.add({'id':81,'href':'/note-cs/docs/','title':"Docs",'content':""});index.add({'id':82,'href':'/note-cs/tags/','title':"Tags",'content':""});index.add({'id':83,'href':'/note-cs/','title':"首页",'content':""});})();