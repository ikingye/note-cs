<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>4.1 MacOS on 计算机学习笔记</title>
    <link>https://kingye.me/note-cs/docs/tool/macos/</link>
    <description>Recent content in 4.1 MacOS on 计算机学习笔记</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://kingye.me/note-cs/docs/tool/macos/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Axure</title>
      <link>https://kingye.me/note-cs/docs/tool/macos/axure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kingye.me/note-cs/docs/tool/macos/axure/</guid>
      <description>Axure RP #  Rapid Prototyping 快速原型
快捷键 #   cmd + D: 副本 cmd + R: 替换  </description>
    </item>
    
    <item>
      <title>Capslock</title>
      <link>https://kingye.me/note-cs/docs/tool/macos/capslock/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kingye.me/note-cs/docs/tool/macos/capslock/</guid>
      <description>Capslock #  Vonng/Capslock 让 Capslock 再次伟大！</description>
    </item>
    
    <item>
      <title>GitHub</title>
      <link>https://kingye.me/note-cs/docs/tool/macos/github/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kingye.me/note-cs/docs/tool/macos/github/</guid>
      <description>GitHub #  设置代理 #  git config --global http.proxy &amp;#34;http://127.0.0.1:8081&amp;#34; git config --global https.proxy &amp;#34;http://127.0.0.1:8081&amp;#34;  # socks5 代理（如 Shadowsocks） git config --global http.proxy &amp;#34;socks5://127.0.0.1:1080&amp;#34; git config --global https.proxy &amp;#34;socks5://127.0.0.1:1080&amp;#34;  # 取消代理 git config --global --unset http.proxy git config --global --unset https.proxy  学习 Github #  Github Learning Lab #  Introduction to GitHub #   Github 工具 #  cli/cli #  GitHub’s official command line tool https://cli.</description>
    </item>
    
    <item>
      <title>Goland</title>
      <link>https://kingye.me/note-cs/docs/tool/macos/goland/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kingye.me/note-cs/docs/tool/macos/goland/</guid>
      <description>Goland #  快捷键 #  跳转 #    指定行 cmd + L
  指定文件 shift + cmd + O
  返回光标上一个位置 cmd + opt + 方向键
  查询 #    函数列表 cmd + f12
  当前文件查询 cmd + F
  当前文件替换 cmd + R
  所有文件查询 shift + cmd + F
  所有文件替换 shift + cmd + R</description>
    </item>
    
    <item>
      <title>gvm</title>
      <link>https://kingye.me/note-cs/docs/tool/macos/gvm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kingye.me/note-cs/docs/tool/macos/gvm/</guid>
      <description>gvm #  moovweb/gvm 安装：
zsh &amp;lt; &amp;lt;(curl -s -S -L https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer) mac m1 #  mac m1 使用 gvm 安装 arm64 版本的 go
file ~/.gvm/gos/go1.16.15/bin/go ~/.gvm/gos/go1.16.15/bin/go: Mach-O 64-bit executable arm64 参考：https://github.com/moovweb/gvm/issues/406
 RROR: Couldn&#39;t remove pkgsets #  gvm use go1.11.1 go clean -modcache gvm use go1.11.4 gvm uninstall go1.11.1 也可以手动删除
rm -rf ~/.gvm/pkgsets/go1.11.1 gvm uninstall go1.11.1 参考：
 ERROR: Couldn&amp;rsquo;t remove pkgsets  </description>
    </item>
    
    <item>
      <title>HHKB</title>
      <link>https://kingye.me/note-cs/docs/tool/macos/hhkb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kingye.me/note-cs/docs/tool/macos/hhkb/</guid>
      <description>HHKB 键盘 #  Happy Hacking Keyboard
使用 #  方向键 #  右侧的 Fn 键 + [ / ; &#39;</description>
    </item>
    
    <item>
      <title>IntelliJ IDEA</title>
      <link>https://kingye.me/note-cs/docs/tool/macos/idea/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kingye.me/note-cs/docs/tool/macos/idea/</guid>
      <description>IntelliJ IDEA #  插件 #  Alibaba Java Coding Guidelines #   教程 #  xiaoxiunique/tool-tips #  idea 中相见恨晚的技巧 https://atips.cn/idea/</description>
    </item>
    
    <item>
      <title>Mas</title>
      <link>https://kingye.me/note-cs/docs/tool/macos/mas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kingye.me/note-cs/docs/tool/macos/mas/</guid>
      <description>mas-cli/mas #  Each application in the Mac App Store has a product identifier which is also used for mas-cli commands. Using mas list will show all installed applications and their product identifiers.
$ mas list 446107677 Screens 407963104 Pixelmator 497799835 Xcode  $ mas search Xcode 497799835 Xcode 688199928 Docs for Xcode 449589707 Dash 3 - API Docs &amp;amp; Snippets. Integrates with Xcode, Alfred, TextWrangler and many more. [...]  $ mas install 808809998 ==&amp;gt; Downloading PaintCode 2 ==&amp;gt; Installed PaintCode 2  # If you want to install the first result that the search command returns, use the lucky command.</description>
    </item>
    
    <item>
      <title>picgo</title>
      <link>https://kingye.me/note-cs/docs/tool/macos/picgo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kingye.me/note-cs/docs/tool/macos/picgo/</guid>
      <description>picgo #  CLI 命令 #  PicGo/PicGo-Core #  Molunerfinn/PicGo #   picgo vscode 快捷键 #   Windows/Unix  Uploading an image from clipoard: Ctrl + Alt + U Uploading images from explorer: Ctrl + Alt + E Uploading an image from input box: Ctrl + Alt + O   OsX  Uploading an image from clipboard: Cmd + Opt + U Uploading images from explorer: Cmd + Opt + E Uploading an image from input box: Cmd + Opt + O    </description>
    </item>
    
    <item>
      <title>pyenv</title>
      <link>https://kingye.me/note-cs/docs/tool/macos/pyenv/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kingye.me/note-cs/docs/tool/macos/pyenv/</guid>
      <description>pyenv/pyenv 安装 #  使用 #  </description>
    </item>
    
    <item>
      <title>ruby</title>
      <link>https://kingye.me/note-cs/docs/tool/macos/ruby/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kingye.me/note-cs/docs/tool/macos/ruby/</guid>
      <description>ruby #  安装 #  brew install ruby
If you need to have ruby first in your PATH, run:  echo &amp;#39;export PATH=&amp;#34;/opt/homebrew/opt/ruby/bin:$PATH&amp;#34;&amp;#39; &amp;gt;&amp;gt; ~/.zshrc  For compilers to find ruby you may need to set:  export LDFLAGS=&amp;#34;-L/opt/homebrew/opt/ruby/lib&amp;#34;  export CPPFLAGS=&amp;#34;-I/opt/homebrew/opt/ruby/include&amp;#34;  For pkg-config to find ruby you may need to set:  export PKG_CONFIG_PATH=&amp;#34;/opt/homebrew/opt/ruby/lib/pkgconfig&amp;#34; </description>
    </item>
    
    <item>
      <title>tmux</title>
      <link>https://kingye.me/note-cs/docs/tool/macos/tmux/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kingye.me/note-cs/docs/tool/macos/tmux/</guid>
      <description>tmux #  gpakosz/.tmux 配置 #  ChrisJohnsen/tmux-MacOSX-pasteboard #  Using the Mac OS X programs pbpaste and pbcopy under tmux does not work.
Other services and unpatched builds of screen are also affected.
gpakosz/.tmux #  Oh My Tmux!
cd git clone https://github.com/gpakosz/.tmux.git ln -s -f .tmux/.tmux.conf cp .tmux/.tmux.conf.local .  教程 #   tmux 2: Productive Mouse-Free Development by @bphogan. 手把手教你使用终端复用神器 Tmux，丢掉鼠标不是梦 [视频] 让你的 tmux 起死回生！[视频]  </description>
    </item>
    
    <item>
      <title>vim</title>
      <link>https://kingye.me/note-cs/docs/tool/macos/vim/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kingye.me/note-cs/docs/tool/macos/vim/</guid>
      <description>vim #   教程 #  iggredible/Learn-Vim #  A book for learning the Vim editor the smart way.</description>
    </item>
    
    <item>
      <title>VSCode</title>
      <link>https://kingye.me/note-cs/docs/tool/macos/vscode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kingye.me/note-cs/docs/tool/macos/vscode/</guid>
      <description>VSCode #  Microsoft/vscode  安装 #  brew cask install visual-studio-code  配置 #  settings.json
{  &amp;#34;gitlens.advanced.messages&amp;#34;: {  &amp;#34;suppressShowKeyBindingsNotice&amp;#34;: true  },  &amp;#34;gitlens.historyExplorer.enabled&amp;#34;: true,  &amp;#34;java.errors.incompleteClasspath.severity&amp;#34;: &amp;#34;ignore&amp;#34;,  &amp;#34;materialTheme.autoApplyIcons&amp;#34;: true,  &amp;#34;workbench.colorCustomizations&amp;#34;: {},  &amp;#34;materialTheme.accentPrevious&amp;#34;: &amp;#34;Breaking Bad&amp;#34;,  &amp;#34;materialTheme.fixIconsRunning&amp;#34;: false,  // Controls the font family.  &amp;#34;editor.fontFamily&amp;#34;: &amp;#34;Consolas, &amp;#39;微软雅黑&amp;#39;, Dengxian, Menlo, Monaco, &amp;#39;Courier New&amp;#39;, monospace&amp;#34;,  // &amp;#34;editor.fontFamily&amp;#34;: &amp;#34;Inconsolata, Consolas, &amp;#39;微软雅黑&amp;#39;, Dengxian, Menlo, Monaco, &amp;#39;Courier New&amp;#39;, monospace&amp;#34;,  &amp;#34;editor.</description>
    </item>
    
  </channel>
</rss>
