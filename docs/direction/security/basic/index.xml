<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>第一部分 基础入门 on 计算机学习笔记</title>
    <link>https://kingye.me/note-cs/docs/direction/security/basic/</link>
    <description>Recent content in 第一部分 基础入门 on 计算机学习笔记</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://kingye.me/note-cs/docs/direction/security/basic/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>XSS</title>
      <link>https://kingye.me/note-cs/docs/direction/security/basic/xss/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/note-cs/docs/direction/security/basic/xss/</guid>
      <description>&lt;h1 id=&#34;xss&#34;&gt;&#xA;  XSS&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#xss&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;&lt;code&gt;Cross-site scripting&lt;/code&gt;&#xA;跨站脚本&#xA;(&lt;a href=&#34;https://www.wikiwand.com/zh-cn/%E8%B7%A8%E7%B6%B2%E7%AB%99%E6%8C%87%E4%BB%A4%E7%A2%BC&#34;&gt;wiki&lt;/a&gt;)&lt;/p&gt;&#xA;&lt;h2 id=&#34;xss-发生的原因&#34;&gt;&#xA;  XSS 发生的原因&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#xss-%e5%8f%91%e7%94%9f%e7%9a%84%e5%8e%9f%e5%9b%a0&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;没有将&lt;strong&gt;用户输入的文本&lt;/strong&gt;进行合适的&lt;strong&gt;过滤&lt;/strong&gt;，就贸然插入到 HTML 中，这很容易造成注入漏洞。&#xA;攻击者可以利用漏洞，构造出恶意的&lt;strong&gt;代码指令&lt;/strong&gt;，进而利用恶意代码危害数据安全。&lt;/p&gt;&#xA;&lt;p&gt;不仅仅是业务上的 “用户的 UGC 内容” 可以进行注入，包括 URL 上的参数等都可以是攻击的来源。在处理输入时，以下内容都不可信：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;来自用户的 UGC 信息&lt;/li&gt;&#xA;&lt;li&gt;来自第三方的链接&lt;/li&gt;&#xA;&lt;li&gt;URL 参数&lt;/li&gt;&#xA;&lt;li&gt;POST 参数&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Referer&lt;/code&gt; （可能来自不可信的来源）&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Cookie&lt;/code&gt; （可能来自&lt;strong&gt;其他子域&lt;/strong&gt;注入）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;xss-有哪些注入的方法&#34;&gt;&#xA;  XSS 有哪些注入的方法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#xss-%e6%9c%89%e5%93%aa%e4%ba%9b%e6%b3%a8%e5%85%a5%e7%9a%84%e6%96%b9%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在 HTML 中内嵌的文本中，恶意内容以 script 标签形成注入。&lt;/li&gt;&#xA;&lt;li&gt;在内联的 JavaScript 中，拼接的数据突破了原本的限制（字符串，变量，方法名等）。&lt;/li&gt;&#xA;&lt;li&gt;在标签属性中，恶意内容包含引号，从而突破属性值的限制，注入其他属性或者标签。&lt;/li&gt;&#xA;&lt;li&gt;在标签的 href、src 等属性中，包含 javascript: 等可执行代码。&lt;/li&gt;&#xA;&lt;li&gt;在 onload、onerror、onclick 等事件中，注入不受控制代码。&lt;/li&gt;&#xA;&lt;li&gt;在 style 属性和标签中，包含类似 &lt;code&gt;background-image:url(&amp;quot;javascript:...&amp;quot;);&lt;/code&gt; 的代码（新版本浏览器已经可以防范）。&lt;/li&gt;&#xA;&lt;li&gt;在 style 属性和标签中，包含类似 &lt;code&gt;expression(...)&lt;/code&gt; 的 CSS 表达式代码（新版本浏览器已经可以防范）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;xss-分类&#34;&gt;&#xA;  XSS 分类&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#xss-%e5%88%86%e7%b1%bb&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;存储型&#34;&gt;&#xA;  存储型&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%ad%98%e5%82%a8%e5%9e%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;存储型 XSS 的攻击步骤：&lt;/p&gt;</description>
    </item>
    <item>
      <title>CSRF</title>
      <link>https://kingye.me/note-cs/docs/direction/security/basic/csrf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/note-cs/docs/direction/security/basic/csrf/</guid>
      <description>&lt;h1 id=&#34;csrf&#34;&gt;&#xA;  CSRF&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#csrf&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;参考&#34;&gt;&#xA;  参考&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8f%82%e8%80%83&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://tech.meituan.com/2018/10/11/fe-security-csrf.html&#34;&gt;前端安全系列（二）：如何防止 CSRF 攻击？&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
