<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>四星 on 计算机学习笔记</title>
    <link>https://kingye.me/note-cs/docs/study/apps/linux/4/</link>
    <description>Recent content in 四星 on 计算机学习笔记</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://kingye.me/note-cs/docs/study/apps/linux/4/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cargo</title>
      <link>https://kingye.me/note-cs/docs/study/apps/linux/4/cargo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kingye.me/note-cs/docs/study/apps/linux/4/cargo/</guid>
      <description>Cargo #  常用命令 #  安装配置 #  curl https://sh.rustup.rs -sSf | sh
参考：
 The Cargo Book  </description>
    </item>
    
    <item>
      <title>k3d</title>
      <link>https://kingye.me/note-cs/docs/study/apps/linux/4/k3d/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kingye.me/note-cs/docs/study/apps/linux/4/k3d/</guid>
      <description>k3d #  rancher/k3d 常用命令 #  k3d cluster create ecsp-test-1 --subnet &amp;#34;172.27.1.0/24&amp;#34; --api-port 10.232.205.41:8701 --servers 1 --agents 2 k3d cluster create ecsp-test-2 --subnet &amp;#34;172.27.2.0/24&amp;#34; --api-port 10.232.205.41:8702 k3d cluster create ecsp-test-3 --subnet &amp;#34;172.27.3.0/24&amp;#34; --api-port 10.232.205.41:8703 k3d cluster create ecsp-test-4 --subnet &amp;#34;172.27.4.0/24&amp;#34; --api-port 10.232.205.41:8704 k3d cluster create ecsp-test-5 --subnet &amp;#34;172.27.5.0/24&amp;#34; --api-port 10.232.205.41:8705 # yq01 k3d cluster create ecsp-edge-1 --subnet &amp;#34;172.27.1.0/24&amp;#34; --api-port 10.197.34.39:8001 --image rancher/k3s:v1.18.19-k3s1 --k3s-server-arg &amp;#39;--kube-apiserver-arg=service-node-port-range=8100-8199&amp;#39; -p &amp;#34;8100-8199:8100-8199@loadbalancer&amp;#34; --verbose k3d cluster create ecsp-edge-2 --subnet &amp;#34;172.</description>
    </item>
    
    <item>
      <title>MicroK8s</title>
      <link>https://kingye.me/note-cs/docs/study/apps/linux/4/microk8s/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kingye.me/note-cs/docs/study/apps/linux/4/microk8s/</guid>
      <description>MicroK8s #  ubuntu/microk8s MicroK8s is a small, fast, single-package Kubernetes for developers, IoT and edge.
https://microk8s.io
常用命令 #  microk8s enable dns 安装配置 #  # microk8s kubelet service 配置文件 vi /etc/systemd/system/snap.microk8s.daemon-kubelet.service # 查看状态 systemctl status snap.microk8s.daemon-kubelet 代理 #  vi /etc/environment
HTTPS_PROXY=http://your-proxy-server:8215 HTTP_PROXY=http://your-proxy-server:8215 NO_PROXY=10.0.0.0/8,172.16.0.0/12,192.168/16 https_proxy=http://your-proxy-server:8215 http_proxy=http://your-proxy-server:8215 no_proxy=10.0.0.0/8,172.16.0.0/12,192.168/16 然后重启
microk8s stop microk8s start 参考：
 Installing behind a proxy  </description>
    </item>
    
    <item>
      <title>Multipass</title>
      <link>https://kingye.me/note-cs/docs/study/apps/linux/4/multipass/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kingye.me/note-cs/docs/study/apps/linux/4/multipass/</guid>
      <description>Multipass #  canonical/multipass Multipass orchestrates virtual Ubuntu instances https://multipass.run
# 安装 snap install multipass # Find available images multipass find # 使用本地 image multipass launch --name k3s --mem 1G --disk 5G file://~/ubuntu-20.04-server-cloudimg-amd64.img # 默认就是 cpus 1, mem 1G, disk 5G # 参考：https://multipass.run/docs/launch-command multipass launch --name rd-node-1 --cpus 10 --mem 20G --disk 20G multipass launch --name rd-node-2 --cpus 10 --mem 20G --disk 20G multipass launch --name qa-node-1 --cpus 10 --mem 20G --disk 20G multipass launch --name qa-node-2 --cpus 10 --mem 20G --disk 20G multipass launch --name qa-node-3 --cpus 10 --mem 20G --disk 20G # 挂载 multipass mount /home/work/ecsp/deploy/ecsp-edge rd-node-1:/home/work/host multipass mount /home/work/ecsp/deploy/ecsp-edge rd-node-2:/home/work/host multipass mount /home/work/ecsp/deploy/ecsp-edge qa-node-1:/home/work/host multipass mount /home/work/ecsp/deploy/ecsp-edge qa-node-2:/home/work/host multipass mount /home/work/ecsp/deploy/ecsp-edge qa-node-3:/home/work/host # 为 VM 启动一个 shell multipass shell rd-node-1 multipass shell rd-node-2 multipass shell qa-node-1 multipass shell qa-node-2 multipass shell qa-node-3 # 安装需要的 sudo su apt update apt install net-tools selinux-utils # 删除 # Delete instances multipass delete ecsp-node-1 multipass delete ecsp-node-2 # Purge all deleted instances permanently multipass purge 网络 #  使用的是桥接模式，因为：</description>
    </item>
    
  </channel>
</rss>
