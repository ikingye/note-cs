<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on 计算机学习笔记</title>
    <link>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/</link>
    <description>Recent content in Docker on 计算机学习笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    
	<atom:link href="https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>命令</title>
      <link>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/command/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/command/</guid>
      <description>Docker 命令 docker ps docker ps vs docker container ls Management Commands vs Commands
Docker 1.13+ introduced grouped commands to help organize a bunch of Docker commands. Both commands do the same thing.
For example docker container ls is the new way to do docker ps.
Sure it’s more typing, but it’s a lot more clear on what it does. Likewise, now you can run docker image ls, docker network ls or docker volume ls.</description>
    </item>
    
    <item>
      <title>版本</title>
      <link>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/version/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/version/</guid>
      <description>Docker 版本 查看版本 docker -v
 版本说明 Docker Engine（0.1.0 到 1.13.1） Docker CE 在 17.03 版本之前叫 Docker Engine 。
版本说明参考 Docker Engine release notes (Previous versions)，
可以看到 Docker Engine 的版本号范围: 0.1.0 (2013-03-23) ~ 1.13.1 (2017-02-08)
Docker CE: Docker Engine release notes
Docker CE 和 Docker EE（17.03） 在 2017 年 3 月 2 日，docker 团队宣布企业版 Docker Enterprise Edition (EE) 发布。
为了一致，免费的 Docker Engine 改名为 Docker Community Edition (CE), 并且采用基于时间的版本号方案。
就在这一天，Docker EE 和 Docker CE 的 17.</description>
    </item>
    
    <item>
      <title>端口</title>
      <link>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/port/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/port/</guid>
      <description>Docker 端口 端口映射  -P（大写）：将容器内部开放的网络端口随机映射到宿主机的一个端口上 -p（小写）：指定要映射的端口，一个指定端口上只可以绑定一个容器  可以有多个 -p    端口映射格式 # 指定 ip、指定宿主机 port、指定容器 port ip:hostport:containerport # 指定 ip、未指定宿主机 port（随机）、指定容器 port ip::containerport # 未指定 ip、指定宿主机 port、指定容器 port hostport:containerport 端口映射命令 # 将容器暴露的所有端口，都随机映射到宿主机上（不推荐） docker run -P -it ubuntu /bin/bash # 将容器指定端口随机映射到宿主机一个随机端口 docker run -P 80 -it ubuntu /bin/bash # 将容器指定端口，随机映射到宿主机的指定 ip 的随机端口 # 有两个冒号 : docker run -P 192.168.0.100::80 -it ubuntu /bin/bash # 将容器指定端口指定映射到宿主机的指定端口上 docker run -p 8000:80 -it ubuntu /bin/bash # 将容器指定端口，指定映射到宿主机指定 ip 和端口 # 只能访问 192.</description>
    </item>
    
    <item>
      <title>容器</title>
      <link>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/container/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/container/</guid>
      <description>Docker 容器 </description>
    </item>
    
    <item>
      <title>仓库</title>
      <link>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/repository/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/repository/</guid>
      <description>Docker 仓库 </description>
    </item>
    
    <item>
      <title>数据卷</title>
      <link>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/volume/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/volume/</guid>
      <description>Docker 数据卷 </description>
    </item>
    
    <item>
      <title>Dockerfile</title>
      <link>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/dockerfile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/dockerfile/</guid>
      <description>Dockerfile 教程 CMD # exec form, preferredCMD [&amp;#34;executable&amp;#34;,&amp;#34;param1&amp;#34;,&amp;#34;param2&amp;#34;]# shell formCMD command param1 param2# as default parameters to ENTRYPOINTCMD [&amp;#34;param1&amp;#34;,&amp;#34;param2&amp;#34;]# 下面两者是等价的CMD echo &amp;#34;hello cmd!&amp;#34;CMD [&amp;#34;/bin/bash&amp;#34;, &amp;#34;-c&amp;#34;, &amp;#34;echo &amp;#39;hello cmd!&amp;#39;&amp;#34;]docker run 时指定了命令或者有 ENTRYPOINT，那么 CMD 就会被覆盖
Dockerfile 文件中可以存在多个 CMD 指令，但仅有最后一个会生效。  ENTRYPOINT  docker run 使用 --entrypoint，则覆盖 Dockerfile 的 ENTRYPOINT 如何 ENTRYPOINT 使用中括号形式  docker run 带了参数，则参数会加给 ENTRYPOINT 定义了 CMD，则 CMD 的参数会加给 ENTRYPOINT    # exec form, preferredENTRYPOINT [&amp;#34;executable&amp;#34;, &amp;#34;param1&amp;#34;, &amp;#34;param2&amp;#34;]# shell formENTRYPOINT command param1 param2# ENTRYPOINT 使用中括号时，也可以直接指定命令# 而 CMD 不行，必须带上 shell 命令做前缀ENTRYPOINT [&amp;#34;/start.</description>
    </item>
    
    <item>
      <title>教程</title>
      <link>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/tutorial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/tutorial/</guid>
      <description>Docker 教程 play-with-docker/play-with-docker  Play With Docker gives you the experience of having a free Alpine Linux Virtual Machine in the cloud where you can build and run Docker containers and even create clusters with Docker features like Swarm Mode.
Under the hood DIND or Docker-in-Docker is used to give the effect of multiple VMs/PCs.
A live version is available at: http://play-with-docker.com/</description>
    </item>
    
    <item>
      <title>关注</title>
      <link>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/attention/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ikingye.github.io/note-cs/docs/domain/cc/container/docker/attention/</guid>
      <description>关注 moby/moby  Moby Project - a collaborative project for the container ecosystem to assemble container-based systems https://mobyproject.org/
docker/docker-ce  Docker CE https://www.docker.com/community-edition
play-with-docker/play-with-docker  Play With Docker gives you the experience of having a free Alpine Linux Virtual Machine in the cloud where you can build and run Docker containers and even create clusters with Docker features like Swarm Mode.
Under the hood DIND or Docker-in-Docker is used to give the effect of multiple VMs/PCs.</description>
    </item>
    
  </channel>
</rss>