<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>1.3.4 Shell 类型 on 计算机学习笔记</title>
    <link>https://kingye.me/note-cs/docs/basic/pl/shell/type/</link>
    <description>Recent content in 1.3.4 Shell 类型 on 计算机学习笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <atom:link href="https://kingye.me/note-cs/docs/basic/pl/shell/type/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>sh</title>
      <link>https://kingye.me/note-cs/docs/basic/pl/shell/type/sh/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/note-cs/docs/basic/pl/shell/type/sh/</guid>
      <description>sh # 标记为 #!/bin/sh 的脚本不应使用任何 POSIX 没有规定的特性 (如 let 等命令，但 #!/bin/bash 可以)。</description>
    </item>
    <item>
      <title>Bash</title>
      <link>https://kingye.me/note-cs/docs/basic/pl/shell/type/bash/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/note-cs/docs/basic/pl/shell/type/bash/</guid>
      <description> Bash # </description>
    </item>
    <item>
      <title>Zsh</title>
      <link>https://kingye.me/note-cs/docs/basic/pl/shell/type/zsh/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/note-cs/docs/basic/pl/shell/type/zsh/</guid>
      <description> Zsh # </description>
    </item>
    <item>
      <title>Dash</title>
      <link>https://kingye.me/note-cs/docs/basic/pl/shell/type/dash/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kingye.me/note-cs/docs/basic/pl/shell/type/dash/</guid>
      <description>Dash # Dash 与 Bash 的区别 # 定义函数 bash: function 在 bash 中为关键字&#xA;dash: dash 中没有 function 这个关键字&#xA;2.select var in list; do command; done&#xA;bash: 支持&#xA;dash: 不支持，替代方法：采用 while+read+case 来实现&#xA;echo {0..10} bash: 支持 {n..m} 展开&#xA;dash: 不支持，替代方法，采用 seq 外部命令&#xA;here string bash: 支持 here string&#xA;dash: 不支持，替代方法：可采用 here documents&#xA;&amp;amp;word 重定向标准输出和标准错误&#xA;bash: 当 word 为非数字时，&amp;gt;&amp;amp;word 变成重定向标准错误和标准输出到文件 word&#xA;dash: &amp;gt;&amp;amp;word, word 不支持非数字，替代方法: &amp;gt;word 2&amp;gt;&amp;amp;1; 常见用法 &amp;gt;/dev/null 2&amp;gt;&amp;amp;1&#xA;数组 bash: 支持数组，bash4 支持关联数组</description>
    </item>
  </channel>
</rss>
